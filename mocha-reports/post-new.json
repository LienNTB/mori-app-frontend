{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-11T13:39:08.974Z",
    "end": "2024-07-11T13:39:36.053Z",
    "duration": 27079,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "38d6a9c0-7443-4d31-a839-3c2a5ef957f0",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\post-new.test.js",
      "file": "\\test\\post-new.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "52b941ca-701f-45cb-966d-ba4fa746c919",
          "title": "Create Post Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\post-new.test.js",
          "file": "\\test\\post-new.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Create Post Page\"",
              "fullTitle": "Create Post Page \"before all\" hook in \"Create Post Page\"",
              "timedOut": false,
              "duration": 2242,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "20874ebf-73e9-483b-a1a3-1ca82dd1a2e6",
              "parentUUID": "52b941ca-701f-45cb-966d-ba4fa746c919",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Create Post Page\"",
              "fullTitle": "Create Post Page \"after all\" hook in \"Create Post Page\"",
              "timedOut": false,
              "duration": 1159,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "db503d4a-1155-4cc8-9108-367b36e6d789",
              "parentUUID": "52b941ca-701f-45cb-966d-ba4fa746c919",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should create a new post",
              "fullTitle": "Create Post Page should create a new post",
              "timedOut": false,
              "duration": 23653,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login('lientest', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/new-post');\n// Điền tiêu đề\nconst titleInput = await driver.findElement(By.css('input[placeholder=\"Nhập tiêu đề...\"]'));\nawait titleInput.sendKeys('Test - Tiêu đề bài viết');\n// Chọn ảnh cho bài viết\nconst imageInput = await driver.findElement(By.css('input[type=\"file\"]'));\nawait imageInput.sendKeys(`${process.cwd()}/test/test-newpost.png`);\n// Select tags\nconst selectTagButton = await driver.findElement(By.css('.NewPost_tagInput___Epnt .NewPost_btn__D69JG'));\nawait selectTagButton.click();\nawait sleep(1000); // Đợi modal mở ra\n// Tìm và chọn một tag\nconst dropdownButton = await driver.findElement(By.css('button[data-slot=\"trigger\"]'));\nawait dropdownButton.click();\nawait sleep(2000); // Đợi dropdown mở ra\n\n// Tìm và click vào phần tử trong dropdown dựa trên text\nconst dropdownItems = await driver.findElements(By.css('ul[data-slot=\"list\"]'));\nfor (const item of dropdownItems) {\n    if ((await item.getText()).trim() === \"Review sách\") {\n      await item.click();\n    }\n  }\nawait dropdownButton.click();\nawait sleep(500); // Đợi dropdown đóng lại\nconst modalCloseButton = await driver.findElement(By.xpath(\"(//button[normalize-space()='Close'])[1]\"));\nawait modalCloseButton.click();\nawait sleep(1000);\n// await modalCloseButton.click();\n// await sleep(1000); // Đợi modal đóng lại\n// Enter content in the rich text editor\nconst richTextEditor = await driver.findElement(By.xpath(\"//div[@role='textbox']\"));\nawait richTextEditor.sendKeys('Nội dung bài viết');\n// Submit the form\nconst submitButton = await driver.findElement(By.css('.NewPost_submitBtn__67fBx'));\nawait submitButton.click();\nlet message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\nwhile (message === 'Processing...') {\n    await driver.sleep(1500);\n    message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\n}\nawait checkToastMessage(driver, '.go3958317564', 'Bài viết được tạo thành công!');\n// // Kiểm tra điều hướng về trang cộng đồng và bài viết mới có hiển thị\n// await driver.wait(until.urlContains('/community'), 30000);\n// const newPostTitle = await driver.findElement(By.contains('Test - Tiêu đề bài viết'));\n// assert(await newPostTitle.isDisplayed(), 'Bài viết mới không hiển thị trong trang cộng đồng');",
              "err": {},
              "uuid": "a32e20c9-c740-466c-b7ec-0905911056ee",
              "parentUUID": "52b941ca-701f-45cb-966d-ba4fa746c919",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a32e20c9-c740-466c-b7ec-0905911056ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "post-new",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mocha-reports",
        "reportFilename": "post-new"
      },
      "version": "6.2.0"
    }
  }
}