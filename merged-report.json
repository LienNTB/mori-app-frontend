{
  "stats": {
    "suites": 12,
    "tests": 71,
    "passes": 71,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 71,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2024-07-11T10:55:22.009Z",
    "end": "2024-07-11T13:49:21.376Z",
    "duration": 10439367
  },
  "results": [
    {
      "uuid": "b650fb5f-8bfd-4fa8-bf35-72af6d409d08",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\account.test.js",
      "file": "\\test\\account.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "28889cee-d271-48a6-8f6f-30e265cead8d",
          "title": "Profile Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\account.test.js",
          "file": "\\test\\account.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Profile Page\"",
              "fullTitle": "Profile Page \"before all\" hook in \"Profile Page\"",
              "timedOut": false,
              "duration": 2229,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "33b2171d-a684-43e8-9e4b-e97461215a96",
              "parentUUID": "28889cee-d271-48a6-8f6f-30e265cead8d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Profile Page\"",
              "fullTitle": "Profile Page \"after all\" hook in \"Profile Page\"",
              "timedOut": false,
              "duration": 343,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "2115cbde-f685-4a3c-a7d4-67f63734e61c",
              "parentUUID": "28889cee-d271-48a6-8f6f-30e265cead8d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "8e540d00-0fc2-4eee-86af-27a579befa79",
              "title": "PROFILE PAGE",
              "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\account.test.js",
              "file": "\\test\\account.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"PROFILE PAGE\"",
                  "fullTitle": "Profile Page PROFILE PAGE \"before all\" hook in \"PROFILE PAGE\"",
                  "timedOut": false,
                  "duration": 4179,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await login('lientest', 'bichLien#20110335');",
                  "err": {},
                  "uuid": "cea897dc-6dde-41de-9242-0a3036a53434",
                  "parentUUID": "8e540d00-0fc2-4eee-86af-27a579befa79",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display profile elements",
                  "fullTitle": "Profile Page PROFILE PAGE should display profile elements",
                  "timedOut": false,
                  "duration": 8205,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/account/profile');\nconst avatar = await driver.findElement(By.css('.profile_accountAvatar__b7kjE'));\nconst displayName = await driver.findElement(By.css('.profile_title__pOn3S'));\nconst followers = await driver.findElement(By.xpath(\"//div[contains(text(),'Ng╞░ß╗¥i theo d├╡i')]\"));\nconst following = await driver.findElement(By.xpath(\"//div[contains(text(),'─Éang theo d├╡i')]\"));\nconst posts = await driver.findElement(By.xpath(\"//div[contains(text(),'B├ái viß║┐t')]\"));\nassert(await avatar.isDisplayed());\nassert(await displayName.isDisplayed());\nassert(await followers.isDisplayed());\nassert(await following.isDisplayed());\nassert(await posts.isDisplayed());",
                  "err": {},
                  "uuid": "aee76c49-032b-427b-8bd3-307dd409b4e3",
                  "parentUUID": "8e540d00-0fc2-4eee-86af-27a579befa79",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should navigate to 'Th╞░ viß╗çn cß╗ºa t├┤i' section and display elements",
                  "fullTitle": "Profile Page PROFILE PAGE should navigate to 'Th╞░ viß╗çn cß╗ºa t├┤i' section and display elements",
                  "timedOut": false,
                  "duration": 2305,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/account/library');\nconst bookTable = await driver.findElement(By.css('.profile_libraryBody__ydCdZ'));\nassert(await bookTable.isDisplayed());",
                  "err": {},
                  "uuid": "9013730c-b1ee-4ebe-8425-ee0121444513",
                  "parentUUID": "8e540d00-0fc2-4eee-86af-27a579befa79",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should navigate to 'Lß╗ïch sß╗¡ ─æß╗ìc' section and display elements",
                  "fullTitle": "Profile Page PROFILE PAGE should navigate to 'Lß╗ïch sß╗¡ ─æß╗ìc' section and display elements",
                  "timedOut": false,
                  "duration": 2149,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/account/library');\nconst history = await driver.wait(until.elementLocated(By.xpath(\"//a[contains(text(),'Lß╗ïch sß╗¡ ─æß╗ìc')]\")), 5000);\nawait history.click();\nconst historyTable = await driver.wait(until.elementLocated(By.css('.profile_libraryBody__ydCdZ')), 5000);\nassert(await historyTable.isDisplayed());",
                  "err": {},
                  "uuid": "8e097adf-fdeb-4454-a530-cb260be0da94",
                  "parentUUID": "8e540d00-0fc2-4eee-86af-27a579befa79",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should navigate to 'Th├┤ng tin hß╗Öi vi├¬n' section and display elements",
                  "fullTitle": "Profile Page PROFILE PAGE should navigate to 'Th├┤ng tin hß╗Öi vi├¬n' section and display elements",
                  "timedOut": false,
                  "duration": 2346,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/account/membership');\nconst title = await driver.wait(until.elementLocated(By.xpath(\"//div[@class='profile_uHead__NgtF7']\")), 10000).getText();\nassert(title == \"Th├┤ng tin hß╗Öi vi├¬n\");",
                  "err": {},
                  "uuid": "ba87d4d8-ed8a-4e9c-ae94-4256e65c0b83",
                  "parentUUID": "8e540d00-0fc2-4eee-86af-27a579befa79",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should navigate to 'B├ái viß║┐t cß╗ºa t├┤i' section and display elements",
                  "fullTitle": "Profile Page PROFILE PAGE should navigate to 'B├ái viß║┐t cß╗ºa t├┤i' section and display elements",
                  "timedOut": false,
                  "duration": 1606,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/account/my-post');\nconst title = await driver.wait(until.elementLocated(By.xpath(\"//div[@class='profile_uHead__NgtF7']\")), 10000).getText();\nassert(title == \"B├ái viß║┐t cß╗ºa t├┤i\");",
                  "err": {},
                  "uuid": "6dbeac77-9ee3-46c9-ab5c-f3493c7b0b45",
                  "parentUUID": "8e540d00-0fc2-4eee-86af-27a579befa79",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should navigate to 'S├ích ─æ├ú mua' section and display elements",
                  "fullTitle": "Profile Page PROFILE PAGE should navigate to 'S├ích ─æ├ú mua' section and display elements",
                  "timedOut": false,
                  "duration": 2239,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/account/my-book');\nconst title = await driver.wait(until.elementLocated(By.xpath(\"//div[@class='profile_uHead__NgtF7']\")), 10000).getText();\nassert(title == \"Danh s├ích s├ích, truyß╗çn bß║ín ─æ├ú mua\");",
                  "err": {},
                  "uuid": "0f0c4c2d-f8ca-4935-8542-0752860a3a3b",
                  "parentUUID": "8e540d00-0fc2-4eee-86af-27a579befa79",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should delete a book from library and display success message",
                  "fullTitle": "Profile Page PROFILE PAGE should delete a book from library and display success message",
                  "timedOut": false,
                  "duration": 4267,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/account/profile');\n    \nconst resetpwwButton = await driver.wait(until.elementLocated(By.xpath(\"//button[contains(text(),'Thay ─æß╗òi mß║¡t khß║⌐u')]\")), 10000)\nawait resetpwwButton.click();\n// Chß╗¥ ─æß║┐n khi chuyß╗ân trang\nawait driver.wait(until.urlContains('/change-password'), 10000);",
                  "err": {},
                  "uuid": "82b10bd9-501e-449d-ba2a-6037abeff7a4",
                  "parentUUID": "8e540d00-0fc2-4eee-86af-27a579befa79",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should delete a book from library and display success message",
                  "fullTitle": "Profile Page PROFILE PAGE should delete a book from library and display success message",
                  "timedOut": false,
                  "duration": 13820,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/account/library');\n    \n// Chß╗¥ ─æß╗úi sß╗æ l╞░ß╗úng h├áng trong bß║úng ─æ╞░ß╗úc tß║úi l├¬n (v├¡ dß╗Ñ: ├¡t nhß║Ñt 1 h├áng)\nawait driver.wait(async function() {\n  let rows = await driver.findElements(By.xpath(\"//div[@class='profile_libraryBody__ydCdZ']//table//tr\"));\n  return rows.length >= 1;\n}, 10000);\n    \n// Kiß╗âm tra lß║íi sß╗æ l╞░ß╗úng h├áng, nß║┐u ├¡t h╞ín 2 th├¼ th├¬m s├ích v├áo th╞░ viß╗çn\nlet rows = await driver.findElements(By.xpath(\"//div[@class='profile_libraryBody__ydCdZ']//table//tr\"));\nif (rows.length < 2) {\n  await driver.get('http://localhost:3000/ebook/664ca0ec8179762b1337d32e');\n  const saveButton = await driver.wait(until.elementLocated(By.xpath(\"//button[contains(text(),'Th├¬m v├áo th╞░ viß╗çn')]\")), 5000);\n  await saveButton.click();\n  await driver.switchTo().alert().accept();\n  await sleep(500);\n  \n  // Quay lß║íi th╞░ viß╗çn v├á ─æß╗úi cho ─æß║┐n khi s├ích mß╗¢i ─æ╞░ß╗úc th├¬m v├áo\n  await driver.get('http://localhost:3000/account/library');\n  await driver.wait(async function() {\n    rows = await driver.findElements(By.xpath(\"//div[@class='profile_libraryBody__ydCdZ']//table//tr\"));\n    return rows.length >= 2;\n  }, 10000);\n}\n    \n// Test x├│a\nconst deleteButton = await driver.wait(until.elementLocated(By.xpath(\"(//*[name()='svg'][@role='img'])[3]\")),10000);\nawait deleteButton.click();\nawait sleep(1000);\nawait checkToastMessage(driver, '.go3958317564', 'Xo├í s├ích khß╗Åi th╞░ viß╗çn th├ánh c├┤ng!');",
                  "err": {},
                  "uuid": "478a5cb5-fe42-49ff-8760-d7c3f3dd888f",
                  "parentUUID": "8e540d00-0fc2-4eee-86af-27a579befa79",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create, edit and delete a reading goal successfully",
                  "fullTitle": "Profile Page PROFILE PAGE should create, edit and delete a reading goal successfully",
                  "timedOut": false,
                  "duration": 4245,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/account/reading-goal');\n// Assuming there's a button to create a reading goal\nconst createReadingGoalButton = await driver.wait(until.elementLocated(By.xpath(\"//button[contains(text(),'Thiß║┐t lß║¡p mß╗Ñc ti├¬u ─æß╗ìc s├ích')]\")), 10000);\nawait createReadingGoalButton.click();\n//create reading goal\nawait driver.wait(until.elementLocated(By.xpath(\"(//span[@aria-hidden='true'])[2]\")), 10000).click();\nawait driver.findElement(By.xpath(\"(//span[@aria-hidden='true'])[6]\")).click();\nawait driver.findElement(By.xpath(\"(//button[normalize-space()='Submit'])[1]\")).click();\nlet message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\nwhile (message === 'Processing...') {\n  message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\n  await driver.sleep(500);\n  await checkToastMessage(driver, '.go3958317564', ['Tß║ío mß╗Ñc ti├¬u mß╗¢i th├ánh c├┤ng!','Bß║ín ─æ├ú c├│ mß╗Ñc ti├¬u ─æß╗ìc s├ích cho Ng├áy rß╗ôi!']);\n}\n//edit reading goal\nawait driver.wait(until.elementLocated(By.xpath(\"(//*[name()='svg'][@data-icon='pencil'])[1]\")), 10000).click();\nawait driver.wait(until.elementLocated(By.xpath(\"(//span[@aria-hidden='true'])[2]\")), 10000).click();\nawait driver.findElement(By.xpath(\"(//span[@aria-hidden='true'])[6]\")).click();\nawait driver.findElement(By.xpath(\"//button[contains(text(),'L╞░u')]\")).click();\nmessage = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\nwhile (message === 'Processing...') {\n  message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\n  await driver.sleep(500);\n  await checkToastMessage(driver, '.go3958317564', 'Chß╗ënh sß╗¡a mß╗Ñc ti├¬u ─æß╗ìc s├ích th├ánh c├┤ng!');\n}\n//delete\nawait driver.wait(until.elementLocated(By.xpath(\"(//*[name()='svg'][@data-icon='xmark'])[1]\")), 10000).click();\nawait driver.wait(until.elementLocated(By.xpath(\"//button[contains(text(),'X├│a mß╗Ñc ti├¬u')]\")), 10000).click();\nmessage = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\nwhile (message === 'Processing...') {\n  message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\n  await driver.sleep(500);\n  await checkToastMessage(driver, '.go3958317564', 'X├│a mß╗Ñc ti├¬u th├ánh c├┤ng!');\n}",
                  "err": {},
                  "uuid": "20b7db27-3b66-43d7-b6f1-2ad66cc9204d",
                  "parentUUID": "8e540d00-0fc2-4eee-86af-27a579befa79",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aee76c49-032b-427b-8bd3-307dd409b4e3",
                "9013730c-b1ee-4ebe-8425-ee0121444513",
                "8e097adf-fdeb-4454-a530-cb260be0da94",
                "ba87d4d8-ed8a-4e9c-ae94-4256e65c0b83",
                "6dbeac77-9ee3-46c9-ab5c-f3493c7b0b45",
                "0f0c4c2d-f8ca-4935-8542-0752860a3a3b",
                "82b10bd9-501e-449d-ba2a-6037abeff7a4",
                "478a5cb5-fe42-49ff-8760-d7c3f3dd888f",
                "20b7db27-3b66-43d7-b6f1-2ad66cc9204d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 41182,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bfee66fd-88e8-4f7a-82dd-22f3e42cca8c",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\audio-book.test.js",
      "file": "\\test\\audio-book.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d841cf9f-2417-44f2-a074-6e35f8cbadac",
          "title": "AudioBook Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\audio-book.test.js",
          "file": "\\test\\audio-book.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"AudioBook Page\"",
              "fullTitle": "AudioBook Page \"before all\" hook in \"AudioBook Page\"",
              "timedOut": false,
              "duration": 2336,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "79c65641-6a6a-4840-a88b-3c2c726bb13b",
              "parentUUID": "d841cf9f-2417-44f2-a074-6e35f8cbadac",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"AudioBook Page\"",
              "fullTitle": "AudioBook Page \"after all\" hook in \"AudioBook Page\"",
              "timedOut": false,
              "duration": 400,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "af6f07d4-1c90-4fa7-886d-5aada62635e1",
              "parentUUID": "d841cf9f-2417-44f2-a074-6e35f8cbadac",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "85c2eec1-1f95-4c51-bc0a-66d03674d2ef",
              "title": "AUDIO BOOK FREE",
              "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\audio-book.test.js",
              "file": "\\test\\audio-book.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display audiobook page elements",
                  "fullTitle": "AudioBook Page AUDIO BOOK FREE should display audiobook page elements",
                  "timedOut": false,
                  "duration": 11667,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/audio-book/656eef18a09708917971ab2b');\nconst { listenButton, saveButton, heartButton, reviewTextarea, sendReviewButton} = await getAudioBookElements(driver);\nassert(await listenButton.isDisplayed());\nassert(await saveButton.isDisplayed());\nassert(await heartButton.isDisplayed());\nassert(await reviewTextarea.isDisplayed());\nassert(await sendReviewButton.isDisplayed());\n// assert(await audioPlayer.isDisplayed());",
                  "err": {},
                  "uuid": "c9288986-b273-4add-bf2e-411bc4c51315",
                  "parentUUID": "85c2eec1-1f95-4c51-bc0a-66d03674d2ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should play audio successfully when clicking 'Listen' button",
                  "fullTitle": "AudioBook Page AUDIO BOOK FREE should play audio successfully when clicking 'Listen' button",
                  "timedOut": false,
                  "duration": 4124,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/audio-book/656eef18a09708917971ab2b');\nconst { listenButton } = await getAudioBookElements(driver);\nawait listenButton.click();\nawait sleep(500);\n// Chß╗¥ cho phß║ºn tß╗¡ audioPlayer xuß║Ñt hiß╗çn\nconst audioPlayer = await driver.wait(until.elementLocated(By.xpath(\"//div[@class='ChapterAudioPlayer_chapterAudioPlayer__SijhM']\")), 5000)\n// Lß║Ñy gi├í trß╗ï currentTime tß╗½ phß║ºn tß╗¡ audioPlayer\naudioPlayer.findElement(By.tagName('audio')).getAttribute('currentTime').then(currentTime => {\n  // Kiß╗âm tra gi├í trß╗ï currentTime\n  assert(parseFloat(currentTime) > 0, 'Audio kh├┤ng bß║»t ─æß║ºu ph├ít.');\n});",
                  "err": {},
                  "uuid": "26d196b5-1e65-4066-b88a-8f6d0dd4bb0e",
                  "parentUUID": "85c2eec1-1f95-4c51-bc0a-66d03674d2ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should save audiobook successfully when clicking 'Save' button",
                  "fullTitle": "AudioBook Page AUDIO BOOK FREE should save audiobook successfully when clicking 'Save' button",
                  "timedOut": false,
                  "duration": 11459,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await login('nguyenlien', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/audio-book/656eef18a09708917971ab2b');\nconst { saveButton } = await getAudioBookElements(driver);\nawait saveButton.click();\nawait sleep(1000);\n// Lß║Ñy gi├í trß╗ï cß╗ºa cß╗¡a sß╗ò cß║únh b├ío\nconst alert = await driver.switchTo().alert();\nconst registerAlertText = await alert.getText();\n// Kiß╗âm tra gi├í trß╗ï cß╗ºa cß╗¡a sß╗ò cß║únh b├ío\nconst expectedAlertText = 'Th├¬m s├ích Atomic habits - Th├│i quen nguy├¬n tß╗¡ v├áo th╞░ viß╗çn?';\nif (registerAlertText === expectedAlertText) {\n    console.log('Gi├í trß╗ï cß╗¡a sß╗ò cß║únh b├ío ─æ├║ng');\n} else {\n    console.error('Gi├í trß╗ï cß╗¡a sß╗ò cß║únh b├ío kh├┤ng ─æ├║ng');\n}\n// Chß║Ñp nhß║¡n cß╗¡a sß╗ò cß║únh b├ío\nawait alert.accept();\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait sleep(2000);\nawait checkToastMessage(driver, '.go3958317564', 'S├ích ─æ├ú tß╗ôn tß║íi trong th╞░ viß╗çn!');",
                  "err": {},
                  "uuid": "c7d12c00-2996-4084-9009-6721821024c1",
                  "parentUUID": "85c2eec1-1f95-4c51-bc0a-66d03674d2ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should like audiobook successfully when clicking 'Heart' button",
                  "fullTitle": "AudioBook Page AUDIO BOOK FREE should like audiobook successfully when clicking 'Heart' button",
                  "timedOut": false,
                  "duration": 4761,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/audio-book/656eef18a09708917971ab2b');\nconst { heartButton } = await getAudioBookElements(driver);\nawait heartButton.click();\nawait sleep(1000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Hearted!');",
                  "err": {},
                  "uuid": "efb0fa36-f214-470c-9783-977f0326e0f2",
                  "parentUUID": "85c2eec1-1f95-4c51-bc0a-66d03674d2ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should send review successfully with correct details",
                  "fullTitle": "AudioBook Page AUDIO BOOK FREE should send review successfully with correct details",
                  "timedOut": false,
                  "duration": 9574,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await login('nguyenlien', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/audio-book/656eef18a09708917971ab2b');\nconst { reviewTextarea, sendReviewButton } = await getAudioBookElements(driver);\nawait reviewTextarea.sendKeys('Great audiobook!');\nawait sendReviewButton.click();\nawait sleep(2000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Th├¬m review th├ánh c├┤ng!');",
                  "err": {},
                  "uuid": "365d08de-8041-48bf-b121-96ca75f5152e",
                  "parentUUID": "85c2eec1-1f95-4c51-bc0a-66d03674d2ef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9288986-b273-4add-bf2e-411bc4c51315",
                "26d196b5-1e65-4066-b88a-8f6d0dd4bb0e",
                "c7d12c00-2996-4084-9009-6721821024c1",
                "efb0fa36-f214-470c-9783-977f0326e0f2",
                "365d08de-8041-48bf-b121-96ca75f5152e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 41585,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "64ad9362-f848-4dfc-a59e-eee3a62de40c",
              "title": "AUDIO BOOK MEMBER",
              "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\audio-book.test.js",
              "file": "\\test\\audio-book.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show error when listening to audiobook without logging in",
                  "fullTitle": "AudioBook Page AUDIO BOOK MEMBER should show error when listening to audiobook without logging in",
                  "timedOut": false,
                  "duration": 4436,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/audio-book/6570bfb8080acd8b8e1c2fd7');\nawait sleep(1000);\n// ─æ─âng xuß║Ñt t├ái khoß║ún\nawait driver.executeScript('localStorage.clear();');\nconst { listenButton } = await getAudioBookElements(driver);\nawait listenButton.click();\nawait sleep(1000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Vui l├▓ng ─æ─âng nhß║¡p v├á ─æ─âng k├╜ g├│i c╞░ß╗¢c ng╞░ß╗¥i d├╣ng ─æß╗â nghe s├ích n├áy!');",
                  "err": {},
                  "uuid": "6be52ef0-98f3-40c1-a6af-75c5a0401b43",
                  "parentUUID": "64ad9362-f848-4dfc-a59e-eee3a62de40c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show error when listening to audiobook without a membership plan",
                  "fullTitle": "AudioBook Page AUDIO BOOK MEMBER should show error when listening to audiobook without a membership plan",
                  "timedOut": false,
                  "duration": 9108,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// ─æ─âng nhß║¡p\nawait login('nguyenlien', 'bichLien#20110335');\n// nghe s├ích\nawait driver.get('http://localhost:3000/audio-book/6570bfb8080acd8b8e1c2fd7');\nconst { listenButton } = await getAudioBookElements(driver);\nawait listenButton.click();\nawait sleep(1000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Vui l├▓ng ─æ─âng k├¡ g├│i c╞░ß╗¢c ng╞░ß╗¥i d├╣ng ─æß╗â nghe s├ích n├áy!');",
                  "err": {},
                  "uuid": "fb5d9782-43fd-4972-a8b5-6a8c2bf4f944",
                  "parentUUID": "64ad9362-f848-4dfc-a59e-eee3a62de40c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should listen to audiobook successfully when clicking 'Listen' button",
                  "fullTitle": "AudioBook Page AUDIO BOOK MEMBER should listen to audiobook successfully when clicking 'Listen' button",
                  "timedOut": false,
                  "duration": 7737,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// ─æ─âng nhß║¡p\nawait login('lientest', 'bichLien#20110335');\n// nghe s├ích\nawait driver.get('http://localhost:3000/audio-book/6570bfb8080acd8b8e1c2fd7');\nconst { listenButton} = await getAudioBookElements(driver);\nawait listenButton.click();\nawait sleep(500);\n\n// Chß╗¥ cho phß║ºn tß╗¡ audioPlayer xuß║Ñt hiß╗çn\nconst audioPlayer = await driver.wait(until.elementLocated(By.xpath(\"//div[@class='ChapterAudioPlayer_chapterAudioPlayer__SijhM']\")), 5000)\n// Lß║Ñy gi├í trß╗ï currentTime tß╗½ phß║ºn tß╗¡ audioPlayer\naudioPlayer.findElement(By.tagName('audio')).getAttribute('currentTime').then(currentTime => {\n  // Kiß╗âm tra gi├í trß╗ï currentTime\n  assert(parseFloat(currentTime) > 0, 'Audio kh├┤ng bß║»t ─æß║ºu ph├ít.');\n});",
                  "err": {},
                  "uuid": "b002c76e-846c-425b-9bb1-88f140e6ae36",
                  "parentUUID": "64ad9362-f848-4dfc-a59e-eee3a62de40c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6be52ef0-98f3-40c1-a6af-75c5a0401b43",
                "fb5d9782-43fd-4972-a8b5-6a8c2bf4f944",
                "b002c76e-846c-425b-9bb1-88f140e6ae36"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21281,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "781e5269-25fc-4dfb-a552-6fcf1fcfbbae",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\book-purchase.test.js",
      "file": "\\test\\book-purchase.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f56707e-b302-4860-ad99-d73920c950a4",
          "title": "Book Purchase Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\book-purchase.test.js",
          "file": "\\test\\book-purchase.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Book Purchase Page\"",
              "fullTitle": "Book Purchase Page \"before all\" hook in \"Book Purchase Page\"",
              "timedOut": false,
              "duration": 3771,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "ca5441ef-c7fd-4640-b841-68636dd6a3fd",
              "parentUUID": "0f56707e-b302-4860-ad99-d73920c950a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Book Purchase Page\"",
              "fullTitle": "Book Purchase Page \"after all\" hook in \"Book Purchase Page\"",
              "timedOut": false,
              "duration": 121,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "44183548-40ff-4cce-b028-9ec8b500742e",
              "parentUUID": "0f56707e-b302-4860-ad99-d73920c950a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "a2e4edf9-6b13-4206-b239-a76e62cdfc9b",
              "title": "BOOK PURCHASE",
              "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\book-purchase.test.js",
              "file": "\\test\\book-purchase.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display purchase page elements",
                  "fullTitle": "Book Purchase Page BOOK PURCHASE should display purchase page elements",
                  "timedOut": false,
                  "duration": 4183,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/book/659330e9ff7f147158b2036c');\nconst { buyButton, readButton, heartButton } = await getPurchaseElements(driver);\nassert(await buyButton.isDisplayed());\nassert(await readButton.isDisplayed());\nassert(await heartButton.isDisplayed());",
                  "err": {},
                  "uuid": "cb197c8b-c94e-4969-8d56-040cdc986915",
                  "parentUUID": "a2e4edf9-6b13-4206-b239-a76e62cdfc9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show error when trying to read book without purchasing",
                  "fullTitle": "Book Purchase Page BOOK PURCHASE should show error when trying to read book without purchasing",
                  "timedOut": false,
                  "duration": 3903,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/book/659330e9ff7f147158b2036c');\nconst { readButton } = await getPurchaseElements(driver);\nawait driver.executeScript('localStorage.clear();'); // Simulate not having purchased the book\nawait readButton.click();\nawait sleep(500);\n// Check for toast message\nawait checkToastMessage(driver, '.go3958317564', 'Vui l├▓ng ─æ─âng nhß║¡p v├á mua s├ích ─æß╗â ─æß╗ìc s├ích n├áy!');",
                  "err": {},
                  "uuid": "fe8710e5-43e7-4add-b927-71715217fe95",
                  "parentUUID": "a2e4edf9-6b13-4206-b239-a76e62cdfc9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should send review successfully with correct details",
                  "fullTitle": "Book Purchase Page BOOK PURCHASE should send review successfully with correct details",
                  "timedOut": false,
                  "duration": 12845,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await login('nguyenlien', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/book/659330e9ff7f147158b2036c');\nconst { reviewTextarea, sendReviewButton } = await getPurchaseElements(driver);\nawait reviewTextarea.sendKeys('Great book!');\nawait sendReviewButton.click();\nawait sleep(2000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Th├¬m review th├ánh c├┤ng!');",
                  "err": {},
                  "uuid": "1c97d812-4638-4f1b-8a28-c778bc85c45f",
                  "parentUUID": "a2e4edf9-6b13-4206-b239-a76e62cdfc9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should read book successfully when clicking 'Read' button",
                  "fullTitle": "Book Purchase Page BOOK PURCHASE should read book successfully when clicking 'Read' button",
                  "timedOut": false,
                  "duration": 9925,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await login('lientest', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/book/659330e9ff7f147158b2036c');\nconst { readButton } = await getPurchaseElements(driver);\nawait readButton.click();\nawait driver.wait(until.urlContains('/reader'), 10000);\nconst currentUrl = await driver.getCurrentUrl();\nassert(currentUrl.includes('/reader'), 'Kh├┤ng chuyß╗ân h╞░ß╗¢ng ─æß║┐n trang ─æß╗ìc s├ích.');",
                  "err": {},
                  "uuid": "277eac4c-a1c9-4ec5-b1b3-9c983789409a",
                  "parentUUID": "a2e4edf9-6b13-4206-b239-a76e62cdfc9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show error when trying to buy book when already purchased",
                  "fullTitle": "Book Purchase Page BOOK PURCHASE should show error when trying to buy book when already purchased",
                  "timedOut": false,
                  "duration": 8702,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await login('lientest', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/book/659330e9ff7f147158b2036c');\nconst { buyButton } = await getPurchaseElements(driver);\nawait buyButton.click();\nawait sleep(500);\n// Check for toast message\nawait checkToastMessage(driver, '.go3958317564', 'Bß║ín ─æ├ú mua s├ích n├áy, ─æß╗â ─æß╗ìc tiß║┐p vui l├▓ng chß╗ìn ─æß╗ìc ngay');",
                  "err": {},
                  "uuid": "f6e3a1b0-4e2d-4858-a817-c407434abf94",
                  "parentUUID": "a2e4edf9-6b13-4206-b239-a76e62cdfc9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should purchase book successfully when clicking 'Buy' button",
                  "fullTitle": "Book Purchase Page BOOK PURCHASE should purchase book successfully when clicking 'Buy' button",
                  "timedOut": false,
                  "duration": 7303,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await login('nguyenlien', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/book/659330e9ff7f147158b2036c');\nconst { buyButton } = await getPurchaseElements(driver);\nawait buyButton.click();\n// Check for redirect to payment page\nawait driver.wait(until.urlContains('/payment'), 10000);\nconst currentUrl = await driver.getCurrentUrl();\nassert(currentUrl.includes('/payment'), 'Kh├┤ng chuyß╗ân h╞░ß╗¢ng ─æß║┐n trang thanh to├ín.');",
                  "err": {},
                  "uuid": "34403dd8-44fe-4c26-b204-b95a64e0a800",
                  "parentUUID": "a2e4edf9-6b13-4206-b239-a76e62cdfc9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should like book successfully when clicking 'Heart' button",
                  "fullTitle": "Book Purchase Page BOOK PURCHASE should like book successfully when clicking 'Heart' button",
                  "timedOut": false,
                  "duration": 8035,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await login('nguyenlien', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/book/659330e9ff7f147158b2036c');\nconst { heartButton } = await getPurchaseElements(driver);\nawait heartButton.click();\nawait sleep(1000);\n// Check for toast message\nawait checkToastMessage(driver, '.go3958317564', 'Hearted!');",
                  "err": {},
                  "uuid": "e224556f-6474-486d-b081-d164e501a767",
                  "parentUUID": "a2e4edf9-6b13-4206-b239-a76e62cdfc9b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show error when trying to read book without purchasing",
                  "fullTitle": "Book Purchase Page BOOK PURCHASE should show error when trying to read book without purchasing",
                  "timedOut": false,
                  "duration": 7158,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await login('nguyenlien', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/book/659330e9ff7f147158b2036c');\nconst { readButton } = await getPurchaseElements(driver);\nawait readButton.click();\nawait sleep(1000);\n// Check for toast message\nawait checkToastMessage(driver, '.go3958317564', 'Vui l├▓ng mua s├ích ─æß╗â ─æß╗ìc s├ích n├áy!');",
                  "err": {},
                  "uuid": "b0c3223f-d7a2-440f-ad83-311f2b9b6020",
                  "parentUUID": "a2e4edf9-6b13-4206-b239-a76e62cdfc9b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb197c8b-c94e-4969-8d56-040cdc986915",
                "fe8710e5-43e7-4add-b927-71715217fe95",
                "1c97d812-4638-4f1b-8a28-c778bc85c45f",
                "277eac4c-a1c9-4ec5-b1b3-9c983789409a",
                "f6e3a1b0-4e2d-4858-a817-c407434abf94",
                "34403dd8-44fe-4c26-b204-b95a64e0a800",
                "e224556f-6474-486d-b081-d164e501a767",
                "b0c3223f-d7a2-440f-ad83-311f2b9b6020"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 62054,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "769da779-795a-4527-a1e4-47752611e564",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\change-pw.test.js",
      "file": "\\test\\change-pw.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0a6f476f-e15d-430b-b65a-463506e786c6",
          "title": "Reset Password Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\change-pw.test.js",
          "file": "\\test\\change-pw.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Reset Password Page\"",
              "fullTitle": "Reset Password Page \"before all\" hook in \"Reset Password Page\"",
              "timedOut": false,
              "duration": 8854,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\nawait login('lientest', 'bichLien#20110335');",
              "err": {},
              "uuid": "4ff71141-ec51-4846-8cb4-6b94bcf327d8",
              "parentUUID": "0a6f476f-e15d-430b-b65a-463506e786c6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Reset Password Page\"",
              "fullTitle": "Reset Password Page \"after all\" hook in \"Reset Password Page\"",
              "timedOut": false,
              "duration": 499,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "78d53c8e-2cc2-451d-9445-ad369b2edb06",
              "parentUUID": "0a6f476f-e15d-430b-b65a-463506e786c6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should display the Reset Password form",
              "fullTitle": "Reset Password Page should display the Reset Password form",
              "timedOut": false,
              "duration": 4572,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/account/profile');\n\nconst resetpwwButton = await driver.wait(until.elementLocated(By.xpath(\"//button[contains(text(),'Thay ─æß╗òi mß║¡t khß║⌐u')]\")), 10000)\nawait resetpwwButton.click();\n// Chß╗¥ ─æß║┐n khi chuyß╗ân trang\nawait driver.wait(until.urlContains('/change-password'), 10000);\nconst title = await driver.wait(until.elementLocated(By.css('.change-password_div4__vBMBS')), 10000);\nassert.strictEqual(await title.getText(), 'Password Change', 'Reset Password form is not displayed properly');",
              "err": {},
              "uuid": "5e12051f-c775-4f14-866a-2436ca643e12",
              "parentUUID": "0a6f476f-e15d-430b-b65a-463506e786c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error when fields are empty",
              "fullTitle": "Reset Password Page should show error when fields are empty",
              "timedOut": false,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const changePasswordButton = await driver.findElement(By.css('.change-password_div14___6y_t'));\nawait changePasswordButton.click();\nlet message =  driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\nwhile (message === 'Processing...') {\n    message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\n    await driver.sleep(500);\n    await checkToastMessage(driver, '.go3958317564', 'Vui l├▓ng nhß║¡p ─æß╗º th├┤ng tin!');\n}",
              "err": {},
              "uuid": "ed52e57f-8f19-46c3-b35b-0e4e851bc8de",
              "parentUUID": "0a6f476f-e15d-430b-b65a-463506e786c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error when passwords do not match",
              "fullTitle": "Reset Password Page should show error when passwords do not match",
              "timedOut": false,
              "duration": 577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.xpath(\"(//input[@type='password'])[1]\")).sendKeys('bichLien#20110335');\nawait driver.findElement(By.xpath(\"(//input[@type='password'])[2]\")).sendKeys('bichLien#20110335');\nawait driver.findElement(By.xpath(\"(//input[@class='change-password_div9__DirhP'])[1]\")).sendKeys('differentPassword123');\nconst changePasswordButton = await driver.findElement(By.css('.change-password_div14___6y_t'));\nawait changePasswordButton.click();\nlet message =  driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\nwhile (message === 'Processing...') {\n    message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\n    await driver.sleep(500);\n    await checkToastMessage(driver, '.go3958317564', 'Mß║¡t khß║⌐u nhß║¡p lß║íi kh├┤ng khß╗¢p!');\n}",
              "err": {},
              "uuid": "e6e8e247-cbef-473e-b61a-081a241b29b2",
              "parentUUID": "0a6f476f-e15d-430b-b65a-463506e786c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully change the password",
              "fullTitle": "Reset Password Page should successfully change the password",
              "timedOut": false,
              "duration": 819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.xpath(\"(//input[@type='password'])[1]\")).clear();\nawait driver.findElement(By.xpath(\"(//input[@type='password'])[1]\")).sendKeys('bichLien#20110335');\nawait driver.findElement(By.xpath(\"(//input[@type='password'])[2]\")).clear();\nawait driver.findElement(By.xpath(\"(//input[@type='password'])[2]\")).sendKeys('bichLien#20110335');\nawait driver.findElement(By.xpath(\"(//input[@class='change-password_div9__DirhP'])[1]\")).clear();\nawait driver.findElement(By.xpath(\"(//input[@class='change-password_div9__DirhP'])[1]\")).sendKeys('bichLien#20110335');\nconst changePasswordButton = await driver.findElement(By.css('.change-password_div14___6y_t'));\nawait changePasswordButton.click();\nlet message =  driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\nwhile (message === 'Processing...') {\n    message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\n    await driver.sleep(500);\n    await checkToastMessage(driver, '.go3958317564', 'Cß║¡p nhß║¡t mß║¡t khß║⌐u th├ánh c├┤ng!');\n}",
              "err": {},
              "uuid": "f4641e87-49b9-4c7f-8b15-2bc5ef67b54c",
              "parentUUID": "0a6f476f-e15d-430b-b65a-463506e786c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e12051f-c775-4f14-866a-2436ca643e12",
            "ed52e57f-8f19-46c3-b35b-0e4e851bc8de",
            "e6e8e247-cbef-473e-b61a-081a241b29b2",
            "f4641e87-49b9-4c7f-8b15-2bc5ef67b54c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6061,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2395ac41-562b-4406-b12b-cb687805a781",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\community.test.js",
      "file": "\\test\\community.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6eb931e4-1546-415d-8b9f-4e44700e282e",
          "title": "Community Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\community.test.js",
          "file": "\\test\\community.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Community Page\"",
              "fullTitle": "Community Page \"before all\" hook in \"Community Page\"",
              "timedOut": false,
              "duration": 8510,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\nawait login('lientest', 'bichLien#20110335');",
              "err": {},
              "uuid": "df85249f-35d7-424d-ac4c-40a5e9d2b31b",
              "parentUUID": "6eb931e4-1546-415d-8b9f-4e44700e282e",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Community Page\"",
              "fullTitle": "Community Page \"before each\" hook in \"Community Page\"",
              "timedOut": false,
              "duration": 816,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/community');",
              "err": {},
              "uuid": "5d46dbc1-9d62-4158-90c6-20234bf0dacb",
              "parentUUID": "6eb931e4-1546-415d-8b9f-4e44700e282e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Community Page\"",
              "fullTitle": "Community Page \"after all\" hook in \"Community Page\"",
              "timedOut": false,
              "duration": 52,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "8e9a7af5-9f6b-4942-97c3-af122e246635",
              "parentUUID": "6eb931e4-1546-415d-8b9f-4e44700e282e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should display the header",
              "fullTitle": "Community Page should display the header",
              "timedOut": false,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const header = await driver.findElement(By.css('.Header_menuLaptop__KWZHU'));\nassert(await header.isDisplayed(), 'Header is not displayed');",
              "err": {},
              "uuid": "811b6817-406f-4755-9fa7-a3e63f2d9b33",
              "parentUUID": "6eb931e4-1546-415d-8b9f-4e44700e282e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display posts",
              "fullTitle": "Community Page should display posts",
              "timedOut": false,
              "duration": 3087,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await sleep(3000); // Wait for posts to load\nconst posts = await driver.findElements(By.css('.Community_postList___mc5j'));\nassert(posts.length > 0, 'No posts found');\nfor (let post of posts) {\n  const postTitle = await post.findElement(By.css('.Community_postTitle__yMMwb'));\n  assert(await postTitle.isDisplayed(), 'Post title not displayed');\n  const postBody = await post.findElement(By.css('.Community_postBody__LHpSR'));\n  assert(await postBody.isDisplayed(), 'Post body not displayed');\n}",
              "err": {},
              "uuid": "f6dd2201-3b8b-46a1-b43f-0b9d5840ba7f",
              "parentUUID": "6eb931e4-1546-415d-8b9f-4e44700e282e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should navigate to user profile when clicking on user avatar",
              "fullTitle": "Community Page should navigate to user profile when clicking on user avatar",
              "timedOut": false,
              "duration": 2049,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userAvatar = await driver.wait(until.elementLocated(By.xpath(\"//img[@alt='avt']\")),10000);\nawait userAvatar.click();\nawait sleep(500);\nconst acc = await driver.wait(until.elementLocated(By.xpath(\"//li[@role='presentation']//li[1]\")),1000);\nawait acc.click();\n\nawait driver.wait(until.urlContains('/account'), 10000);",
              "err": {},
              "uuid": "9b208c1f-9efd-4743-8999-e5ac707e673f",
              "parentUUID": "6eb931e4-1546-415d-8b9f-4e44700e282e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display post details when clicking on post title",
              "fullTitle": "Community Page should display post details when clicking on post title",
              "timedOut": false,
              "duration": 2299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const postTitle = await driver.wait(until.elementLocated(By.xpath(\"(//div[@class='Community_postTitle__yMMwb']/a)[1]\")), 10000);\nconst postDetailUrl = await postTitle.getAttribute('href');\nawait postTitle.click();\nawait driver.wait(until.urlContains(postDetailUrl), 10000);\nconst currentUrl = await driver.getCurrentUrl();\nassert(currentUrl.includes(postDetailUrl), `Failed to navigate to ${postDetailUrl}`);",
              "err": {},
              "uuid": "25cd6040-c9ab-4b38-a676-2e0bf6343e55",
              "parentUUID": "6eb931e4-1546-415d-8b9f-4e44700e282e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should navigate to post detail page when post title is clicked",
              "fullTitle": "Community Page should navigate to post detail page when post title is clicked",
              "timedOut": false,
              "duration": 25273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Chß╗¥ trang tß║úi ho├án to├án\nawait driver.wait(until.elementLocated(By.xpath(\"//div[@class='Community_postTitle__yMMwb']\")), 10000);\n  \nlet postItems = await driver.findElements(By.xpath(\"//div[@class='Community_postTitle__yMMwb']\"));\nassert(postItems.length > 0, 'No post items found');\n  \nfor (let i = 0; i < postItems.length; i++) {\n  // X├íc ─æß╗ïnh lß║íi c├íc phß║ºn tß╗¡ sau khi quay lß║íi trang tr╞░ß╗¢c\n  postItems = await driver.findElements(By.xpath(\"//div[@class='Community_postTitle__yMMwb']\"));\n  const postItem = postItems[i];\n  const postTitle = await postItem.findElement(By.xpath(\".//a\")); // Sß╗¡a XPath ─æß╗â chß╗ë t├¼m kiß║┐m trong postItem\n  const href = await postTitle.getAttribute('href');\n  await postTitle.click();\n  await driver.wait(until.urlContains(href), 10000);\n  const currentUrl = await driver.getCurrentUrl();\n  assert(currentUrl.includes(href), `Failed to navigate to ${href}`);\n  \n  await driver.navigate().back();\n  await sleep(2000); // ─Éß╗úi trang tß║úi lß║íi tr╞░ß╗¢c khi kiß╗âm tra n├║t tiß║┐p theo\n}",
              "err": {},
              "uuid": "508a89a8-2e4f-4feb-939d-7a5c141b1d13",
              "parentUUID": "6eb931e4-1546-415d-8b9f-4e44700e282e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display tags associated with posts",
              "fullTitle": "Community Page should display tags associated with posts",
              "timedOut": false,
              "duration": 10039,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(10000); // Chß╗¥ b├ái ─æ─âng tß║úi\nconst tagListElements = await driver.findElements(By.className('Community_tagList__r1ut8'));\nassert(tagListElements.length > 0, 'Elements containing tags were not found.');\n  \nconst tagElements = await tagListElements[0].findElements(By.className('Tag_container__cy7A5'));\nassert(tagElements.length > 0, 'Tags not found');\n  \nfor (let tagElement of tagElements) {\n  assert(await tagElement.isDisplayed(), 'Tags are not displayed');\n}",
              "err": {},
              "uuid": "bd52eda1-1d3d-4fb8-a5ab-af9452601570",
              "parentUUID": "6eb931e4-1546-415d-8b9f-4e44700e282e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display the footer",
              "fullTitle": "Community Page should display the footer",
              "timedOut": false,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const footer = await driver.findElement(By.css('footer'));\nassert(await footer.isDisplayed(), 'Footer is not displayed');",
              "err": {},
              "uuid": "3092bc90-ea95-4ae2-90b2-9f710f190225",
              "parentUUID": "6eb931e4-1546-415d-8b9f-4e44700e282e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "811b6817-406f-4755-9fa7-a3e63f2d9b33",
            "f6dd2201-3b8b-46a1-b43f-0b9d5840ba7f",
            "9b208c1f-9efd-4743-8999-e5ac707e673f",
            "25cd6040-c9ab-4b38-a676-2e0bf6343e55",
            "508a89a8-2e4f-4feb-939d-7a5c141b1d13",
            "bd52eda1-1d3d-4fb8-a5ab-af9452601570",
            "3092bc90-ea95-4ae2-90b2-9f710f190225"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 42983,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4ba81f9d-28b0-40ff-8551-149939876398",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\ebook.test.js",
      "file": "\\test\\ebook.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "de2bf1f0-9093-4d59-b45c-b2efd684a3b0",
          "title": "EBook Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\ebook.test.js",
          "file": "\\test\\ebook.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"EBook Page\"",
              "fullTitle": "EBook Page \"before all\" hook in \"EBook Page\"",
              "timedOut": false,
              "duration": 3111,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "70702890-6e84-44bd-9964-379bb14954c2",
              "parentUUID": "de2bf1f0-9093-4d59-b45c-b2efd684a3b0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"EBook Page\"",
              "fullTitle": "EBook Page \"after all\" hook in \"EBook Page\"",
              "timedOut": false,
              "duration": 128,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "55a4747c-9bf8-48c9-9357-ab89d9cc8df4",
              "parentUUID": "de2bf1f0-9093-4d59-b45c-b2efd684a3b0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "8e65b372-5142-4355-a309-dacf65b5bce5",
              "title": "BOOK FREE",
              "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\ebook.test.js",
              "file": "\\test\\ebook.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display eBook page elements",
                  "fullTitle": "EBook Page BOOK FREE should display eBook page elements",
                  "timedOut": false,
                  "duration": 5353,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/ebook/664ca0ec8179762b1337d32e');\nconst { readButton, saveButton, heartButton, reviewTextarea, sendReviewButton } = await getEBookElements(driver);\nassert(await readButton.isDisplayed());\nassert(await saveButton.isDisplayed());\nassert(await heartButton.isDisplayed());\nassert(await reviewTextarea.isDisplayed());\nassert(await sendReviewButton.isDisplayed());",
                  "err": {},
                  "uuid": "af6c7b93-1076-497f-b436-d3b230ab2bdd",
                  "parentUUID": "8e65b372-5142-4355-a309-dacf65b5bce5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should read book successfully when clicking 'Read' button",
                  "fullTitle": "EBook Page BOOK FREE should read book successfully when clicking 'Read' button",
                  "timedOut": false,
                  "duration": 11050,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/ebook/664ca0ec8179762b1337d32e');\nconst { readButton } = await getEBookElements(driver);\nawait readButton.click();\nawait driver.wait(until.urlContains('/reader'), 10000);\nconst currentUrl = await driver.getCurrentUrl();\nassert(currentUrl.includes('/reader'), 'Kh├┤ng chuyß╗ân h╞░ß╗¢ng ─æß║┐n trang ─æß╗ìc s├ích.');",
                  "err": {},
                  "uuid": "a315fe1e-7472-4dba-b70f-2cba9d01a512",
                  "parentUUID": "8e65b372-5142-4355-a309-dacf65b5bce5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should save book successfully when clicking 'Save' button",
                  "fullTitle": "EBook Page BOOK FREE should save book successfully when clicking 'Save' button",
                  "timedOut": false,
                  "duration": 20865,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await login('nguyenlien', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/ebook/664ca0ec8179762b1337d32e');\nconst { saveButton } = await getEBookElements(driver);\nawait saveButton.click();\nawait sleep(1000);\n// Lß║Ñy gi├í trß╗ï cß╗ºa cß╗¡a sß╗ò cß║únh b├ío\nconst alert = await driver.switchTo().alert();\nconst registerAlertText = await alert.getText();\n// Kiß╗âm tra gi├í trß╗ï cß╗ºa cß╗¡a sß╗ò cß║únh b├ío\nconst expectedAlertText = 'Th├¬m s├ích Nß║┐u Biß║┐t Tr─âm N─âm L├á Hß╗»u Hß║ín v├áo th╞░ viß╗çn?';\nif (registerAlertText === expectedAlertText) {\n    console.log('Gi├í trß╗ï cß╗¡a sß╗ò cß║únh b├ío ─æ├║ng');\n} else {\n    console.error('Gi├í trß╗ï cß╗¡a sß╗ò cß║únh b├ío kh├┤ng ─æ├║ng');\n}\n// Chß║Ñp nhß║¡n cß╗¡a sß╗ò cß║únh b├ío\nawait alert.accept();\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait sleep(2000);\nawait checkToastMessage(driver, '.go3958317564', 'S├ích ─æ├ú tß╗ôn tß║íi trong th╞░ viß╗çn!');",
                  "err": {},
                  "uuid": "04c0d313-4911-40c5-8ad6-3e26c9cc9a2b",
                  "parentUUID": "8e65b372-5142-4355-a309-dacf65b5bce5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should like book successfully when clicking 'Heart' button",
                  "fullTitle": "EBook Page BOOK FREE should like book successfully when clicking 'Heart' button",
                  "timedOut": false,
                  "duration": 4336,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/ebook/664ca0ec8179762b1337d32e');\nconst { heartButton } = await getEBookElements(driver);\nawait heartButton.click();\nawait sleep(1000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Hearted!');",
                  "err": {},
                  "uuid": "0670145a-6081-48fa-92ba-26f2880afab0",
                  "parentUUID": "8e65b372-5142-4355-a309-dacf65b5bce5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should send review successfully with correct details",
                  "fullTitle": "EBook Page BOOK FREE should send review successfully with correct details",
                  "timedOut": false,
                  "duration": 8399,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await login('nguyenlien', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/ebook/664ca0ec8179762b1337d32e');\nconst { reviewTextarea, sendReviewButton } = await getEBookElements(driver);\nawait reviewTextarea.sendKeys('Great book!');\nawait sendReviewButton.click();\nawait sleep(2000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Th├¬m review th├ánh c├┤ng!');",
                  "err": {},
                  "uuid": "ae4746e8-d43e-4cc5-98e4-59f450c5aaee",
                  "parentUUID": "8e65b372-5142-4355-a309-dacf65b5bce5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "af6c7b93-1076-497f-b436-d3b230ab2bdd",
                "a315fe1e-7472-4dba-b70f-2cba9d01a512",
                "04c0d313-4911-40c5-8ad6-3e26c9cc9a2b",
                "0670145a-6081-48fa-92ba-26f2880afab0",
                "ae4746e8-d43e-4cc5-98e4-59f450c5aaee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 50003,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "1e9bc3e9-cf07-4549-8a70-c9abcf94082b",
              "title": "BOOK MEMBER",
              "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\ebook.test.js",
              "file": "\\test\\ebook.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show error when reading book without logging in",
                  "fullTitle": "EBook Page BOOK MEMBER should show error when reading book without logging in",
                  "timedOut": false,
                  "duration": 7966,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get('http://localhost:3000/ebook/664c95c134e9d01f77e6f1b6');\nawait sleep(1000);\n// ─æ─âng xuß║Ñt t├ái khoß║ún\nconst account = await driver.wait(until.elementLocated(By.css('.Header_accountAvt__puLhX')),10000);\nawait account.click();\nawait driver.findElement(By.xpath(\"//div[@class='Header_container__Aasa1']//li[2]\")).click();\nawait sleep(1000);\n//\nawait driver.get('http://localhost:3000/ebook/664c95c134e9d01f77e6f1b6');\nawait sleep(1000);\nconst { readButton } = await getEBookElements(driver);\nawait readButton.click();\nawait sleep(500);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Vui l├▓ng ─æ─âng nhß║¡p v├á ─æ─âng k├╜ g├│i c╞░ß╗¢c ng╞░ß╗¥i d├╣ng ─æß╗â ─æß╗ìc s├ích n├áy!');",
                  "err": {},
                  "uuid": "33dc260a-f001-4324-8f5d-e34560df0673",
                  "parentUUID": "1e9bc3e9-cf07-4549-8a70-c9abcf94082b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show error when reading book without a membership plan",
                  "fullTitle": "EBook Page BOOK MEMBER should show error when reading book without a membership plan",
                  "timedOut": false,
                  "duration": 5535,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// ─æ─âng nhß║¡p\nawait login('nguyenlien', 'bichLien#20110335');\n// ─æß╗ìc s├ích\nawait driver.get('http://localhost:3000/ebook/664c95c134e9d01f77e6f1b6');\nconst { readButton } = await getEBookElements(driver);\nawait readButton.click();\nawait sleep(1000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Vui l├▓ng ─æ─âng k├¡ g├│i c╞░ß╗¢c ng╞░ß╗¥i d├╣ng ─æß╗â ─æß╗ìc s├ích n├áy!');",
                  "err": {},
                  "uuid": "9b66f963-e19e-4a0a-b300-cefe356c3f74",
                  "parentUUID": "1e9bc3e9-cf07-4549-8a70-c9abcf94082b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should read book successfully when clicking 'Read' button",
                  "fullTitle": "EBook Page BOOK MEMBER should read book successfully when clicking 'Read' button",
                  "timedOut": false,
                  "duration": 6481,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// ─æ─âng nhß║¡p\nawait login('lientest', 'bichLien#20110335');\n// ─æß╗ìc s├ích\nawait driver.get('http://localhost:3000/ebook/664c95c134e9d01f77e6f1b6');\nconst { readButton } = await getEBookElements(driver);\nawait readButton.click();\n\nawait driver.wait(until.urlContains('/reader'), 10000)\nconst currentUrl = await driver.getCurrentUrl();\nassert(currentUrl.includes('/reader'), 'Kh├┤ng chuyß╗ân h╞░ß╗¢ng ─æß║┐n trang ─æß╗ìc s├ích.');",
                  "err": {},
                  "uuid": "ac575263-0e54-43e9-a071-cc86ba76d88a",
                  "parentUUID": "1e9bc3e9-cf07-4549-8a70-c9abcf94082b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "33dc260a-f001-4324-8f5d-e34560df0673",
                "9b66f963-e19e-4a0a-b300-cefe356c3f74",
                "ac575263-0e54-43e9-a071-cc86ba76d88a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19982,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1fc994c9-9b13-46bb-b198-2e23f069bf0d",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\homepage.test.js",
      "file": "\\test\\homepage.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d20f92dd-51ba-4527-87c4-887a5a416988",
          "title": "HomePage",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\homepage.test.js",
          "file": "\\test\\homepage.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"HomePage\"",
              "fullTitle": "HomePage \"before all\" hook in \"HomePage\"",
              "timedOut": false,
              "duration": 2538,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "28ae1c6f-3e2e-42c6-a509-a6fab682fe8d",
              "parentUUID": "d20f92dd-51ba-4527-87c4-887a5a416988",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"HomePage\"",
              "fullTitle": "HomePage \"before each\" hook in \"HomePage\"",
              "timedOut": false,
              "duration": 778,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000');",
              "err": {},
              "uuid": "0fa4ed2c-a976-4bad-8352-62b1de81d012",
              "parentUUID": "d20f92dd-51ba-4527-87c4-887a5a416988",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"HomePage\"",
              "fullTitle": "HomePage \"after all\" hook in \"HomePage\"",
              "timedOut": false,
              "duration": 66,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "d88e2d28-c9fd-458e-9bc4-8b86bce91099",
              "parentUUID": "d20f92dd-51ba-4527-87c4-887a5a416988",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "display",
              "fullTitle": "HomePage display",
              "timedOut": false,
              "duration": 2677,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//check header\nawait driver.findElement(By.css(\".Header_menuLaptop__2tD7o\")).click()\nawait driver.findElement(By.css(\".Header_menuLaptop__2tD7o input\")).click()\n//check footer\nconst footer = await driver.findElement(By.css('footer'));\n// check danh mß╗Ñc\nawait driver.findElement(By.css(\".Header_danhmuc__vbubx\")).click()\nawait sleep(2000);// chß╗¥ danh mß╗Ñc load tags - cuß╗Ön chuß╗Öt check \nconst danhMucElement = await driver.findElement(By.css(\".gap-1\"))\nconst actions = driver.actions({async: true});\nawait actions.move({origin: danhMucElement}).press().perform();\nawait driver.actions({ bridge: true }).move(danhMucElement).perform()\nawait driver.actions({ bridge: true }).move(danhMucElement).release().perform()\nconst danhMucText = await danhMucElement.getText();\nassert.strictEqual(danhMucText.trim() !== '', true, 'Danh mß╗Ñc bß╗ï trß╗æng - lß╗ùi load tags');",
              "err": {},
              "uuid": "18382fc5-f89c-4dc2-8570-2436b43d5619",
              "parentUUID": "d20f92dd-51ba-4527-87c4-887a5a416988",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display book categories",
              "fullTitle": "HomePage should display book categories",
              "timedOut": false,
              "duration": 3460,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bookSections = await driver.findElements(By.css('.homepage_bookSectionContainer__Og0C8'));\nassert(bookSections.length > 0, 'No book sections found');\nawait sleep(3000);\nfor (let section of bookSections) {\n  const sectionHeader = await section.findElement(By.css('.homepage_sectionHeader__pfYbU'));\n  assert(await sectionHeader.isDisplayed(), 'Section header not displayed');\n  \n  const bookList = await section.findElement(By.css('.homepage_sectionBody__QmY5K'));\n  const listbookText = await bookList.getText();\n  assert.strictEqual(listbookText.trim() !== '', true , 'Book list or bookcategories not displayed');\n}",
              "err": {},
              "uuid": "835fd23e-dfad-4ce1-b26e-70800bbbd15f",
              "parentUUID": "d20f92dd-51ba-4527-87c4-887a5a416988",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should navigate to category pages when 'Xem th├¬m' is clicked",
              "fullTitle": "HomePage should navigate to category pages when 'Xem th├¬m' is clicked",
              "timedOut": false,
              "duration": 3619,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const viewMoreButtons = await driver.findElements(By.css('.homepage_bookSectionContainer__Og0C8:nth-child(4) .homepage_getmorebtn__fLrAS'));\nassert(viewMoreButtons.length > 0, 'No \"Xem th├¬m\" buttons found');\nfor (let button of viewMoreButtons) {\n  const href = await button.getAttribute('href');\n  await button.click();\n  await driver.wait(until.urlContains(href), 10000);\n  const currentUrl = await driver.getCurrentUrl();\n  assert(currentUrl.includes(href), `Failed to navigate to ${href}`);\n  await driver.navigate().back();\n  await sleep(2000); // ─Éß╗úi trang tß║úi lß║íi tr╞░ß╗¢c khi kiß╗âm tra n├║t tiß║┐p theo\n}",
              "err": {},
              "uuid": "1e29afd7-a899-41ce-9391-3fdc14b35718",
              "parentUUID": "d20f92dd-51ba-4527-87c4-887a5a416988",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display user recommendations if logged in",
              "fullTitle": "HomePage should display user recommendations if logged in",
              "timedOut": false,
              "duration": 7437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ─É─âng nhß║¡p t├ái khoß║ún\nawait driver.wait(until.elementLocated(By.linkText(\"Login\"))).click();\nawait sleep(3000);\nconst usernameInput = await driver.findElement(By.css('input.login_div7__ond80'));\nconst passwordInput = await driver.findElement(By.css('input.login_div9__yOW_d'));\nconst signInButton = await driver.findElement(By.css('.login_div14__bjpo5'));\nawait usernameInput.sendKeys('lientest');\nawait passwordInput.sendKeys('bichLien#20110335');\nawait signInButton.click();\nawait sleep(4000); // ─Éß╗úi mß╗Öt thß╗¥i gian ─æß╗â dß╗» liß╗çu tß║úi xong\nconst recommendationSection = await driver.findElement(By.xpath(\"//h3[contains(text(), 'Mori ngh─⌐ bß║ín sß║╜ th├¡ch')]\"));\nassert(await recommendationSection.isDisplayed(), 'Recommendation section not displayed');",
              "err": {},
              "uuid": "d3d2ef6a-2096-41e4-b83f-801a226722e4",
              "parentUUID": "d20f92dd-51ba-4527-87c4-887a5a416988",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18382fc5-f89c-4dc2-8570-2436b43d5619",
            "835fd23e-dfad-4ce1-b26e-70800bbbd15f",
            "1e29afd7-a899-41ce-9391-3fdc14b35718",
            "d3d2ef6a-2096-41e4-b83f-801a226722e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17193,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec12f912-75c8-498e-8ce5-08b248ce22bd",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\login.test.js",
      "file": "\\test\\login.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "91f91f7a-92ff-4aab-af8d-6889080cbf03",
          "title": "Login Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\login.test.js",
          "file": "\\test\\login.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login Page\"",
              "fullTitle": "Login Page \"before all\" hook in \"Login Page\"",
              "timedOut": false,
              "duration": 1669,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "0406bde0-0ec2-455a-a351-d6933906f2b1",
              "parentUUID": "91f91f7a-92ff-4aab-af8d-6889080cbf03",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Login Page\"",
              "fullTitle": "Login Page \"before each\" hook in \"Login Page\"",
              "timedOut": false,
              "duration": 938,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/login');",
              "err": {},
              "uuid": "95dd60c3-2b1a-454c-bfec-6ee680bc6dde",
              "parentUUID": "91f91f7a-92ff-4aab-af8d-6889080cbf03",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login Page\"",
              "fullTitle": "Login Page \"after all\" hook in \"Login Page\"",
              "timedOut": false,
              "duration": 329,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "66220cbe-fb27-42aa-9a08-ab11aec5ed38",
              "parentUUID": "91f91f7a-92ff-4aab-af8d-6889080cbf03",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "26b1b6d7-1785-46f6-9419-6955648836ca",
              "title": "Login",
              "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\login.test.js",
              "file": "\\test\\login.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display login form",
                  "fullTitle": "Login Page Login should display login form",
                  "timedOut": false,
                  "duration": 345,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const welcomeText = await driver.findElement(By.xpath(\"//*[contains(text(), 'WELCOME BACK!')]\"));\nconst usernameInput = await driver.findElement(By.css('input.login_div7__ond80'));\nconst passwordInput = await driver.findElement(By.css('input.login_div9__yOW_d'));\nconst signInButton = await driver.findElement(By.xpath(\"//*[contains(text(), 'Sign In')]\"));\nconst continueWithText = await driver.findElement(By.xpath(\"//*[contains(text(), 'or continue with')]\"));\nconst socialLoginDiv = await driver.findElement(By.css('div.login_div16__86GRZ'));\nassert(await welcomeText.isDisplayed());\nassert(await usernameInput.isDisplayed());\nassert(await passwordInput.isDisplayed());\nassert(await signInButton.isDisplayed());\nassert(await continueWithText.isDisplayed());\nassert(await socialLoginDiv.isDisplayed());",
                  "err": {},
                  "uuid": "7aeea127-07cd-4881-8332-7c7596aedb1c",
                  "parentUUID": "26b1b6d7-1785-46f6-9419-6955648836ca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should log in successfully with correct credentials",
                  "fullTitle": "Login Page Login should log in successfully with correct credentials",
                  "timedOut": false,
                  "duration": 4641,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const usernameInput = await driver.findElement(By.css('input.login_div7__ond80'));\nconst passwordInput = await driver.findElement(By.css('input.login_div9__yOW_d'));\nconst signInButton = await driver.findElement(By.css('.login_div14__bjpo5'));\nawait usernameInput.sendKeys('lientest');\nawait passwordInput.sendKeys('bichLien#20110335');\nawait signInButton.click();\nawait sleep(1000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\n// const myCssSelector = '.go2072408551';\n// await checkToastMessage(driver, myCssSelector, '─É─âng nhß║¡p th├ánh c├┤ng!');\nawait sleep(3000);\nconst currentUrl = await driver.getCurrentUrl();\nassert(currentUrl.includes('/homepage'));",
                  "err": {},
                  "uuid": "b9d9faba-295b-4e91-8565-3f9059b34d1d",
                  "parentUUID": "26b1b6d7-1785-46f6-9419-6955648836ca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for missing username",
                  "fullTitle": "Login Page Login should display error for missing username",
                  "timedOut": false,
                  "duration": 1414,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Kiß╗âm tra tr╞░ß╗¥ng hß╗úp kh├┤ng c├│ t├¬n ng╞░ß╗¥i d├╣ng\nconst usernameInput = await driver.findElement(By.css('input.login_div7__ond80'));\nconst passwordInput = await driver.findElement(By.css('input.login_div9__yOW_d'));\nconst signInButton = await driver.findElement(By.css('.login_div14__bjpo5'));\nawait passwordInput.sendKeys('bichLien#20110335');\nawait signInButton.click();\nawait sleep(1000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nconst myCssSelector = '.go2072408551';\nawait checkToastMessage(driver, myCssSelector, 'Vui l├▓ng nhß║¡p ─æß╗º th├┤ng tin ─æ─âng nhß║¡p!');",
                  "err": {},
                  "uuid": "d9f19e50-ce86-498c-b3c1-ba817c1bc72f",
                  "parentUUID": "26b1b6d7-1785-46f6-9419-6955648836ca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for missing password",
                  "fullTitle": "Login Page Login should display error for missing password",
                  "timedOut": false,
                  "duration": 1297,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const usernameInput = await driver.findElement(By.css('input.login_div7__ond80'));\nconst passwordInput = await driver.findElement(By.css('input.login_div9__yOW_d'));\nconst signInButton = await driver.findElement(By.css('.login_div14__bjpo5'));\n// Kiß╗âm tra tr╞░ß╗¥ng hß╗úp kh├┤ng c├│ mß║¡t khß║⌐u\nawait usernameInput.sendKeys('lientest');\nawait signInButton.click();\nawait sleep(1000);\nconst myCssSelector = '.go2072408551';\nawait checkToastMessage(driver, myCssSelector, 'Vui l├▓ng nhß║¡p ─æß╗º th├┤ng tin ─æ─âng nhß║¡p!');",
                  "err": {},
                  "uuid": "1c6308ef-9524-4231-919c-8a7fc73dd4a9",
                  "parentUUID": "26b1b6d7-1785-46f6-9419-6955648836ca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for invalid login credentials",
                  "fullTitle": "Login Page Login should display error for invalid login credentials",
                  "timedOut": false,
                  "duration": 6623,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const usernameInput = await driver.findElement(By.css('input.login_div7__ond80'));\nconst passwordInput = await driver.findElement(By.css('input.login_div9__yOW_d'));\nconst signInButton = await driver.findElement(By.css('.login_div14__bjpo5'));\n// Nhß║¡p sai username\nawait usernameInput.sendKeys('lienaaaa');\nawait passwordInput.sendKeys('bichLien#20110335');\nawait signInButton.click();\nawait sleep(3000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nconst myCssSelector = '.go2072408551';\nawait checkToastMessage(driver, myCssSelector, 'Th├┤ng tin ─æ─âng nhß║¡p kh├┤ng ─æ├║ng!');\n// Nhß║¡p sai password\nawait usernameInput.clear();\nawait usernameInput.sendKeys('lientest');\nawait passwordInput.clear();\nawait passwordInput.sendKeys('20110335');\nawait signInButton.click();\nawait sleep(3000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, myCssSelector, 'Mß║¡t khß║⌐u bß║ín nhß║¡p ch╞░a ch├¡nh x├íc');",
                  "err": {},
                  "uuid": "6d7adc1e-cc9b-453c-9fea-e4aab43640dc",
                  "parentUUID": "26b1b6d7-1785-46f6-9419-6955648836ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7aeea127-07cd-4881-8332-7c7596aedb1c",
                "b9d9faba-295b-4e91-8565-3f9059b34d1d",
                "d9f19e50-ce86-498c-b3c1-ba817c1bc72f",
                "1c6308ef-9524-4231-919c-8a7fc73dd4a9",
                "6d7adc1e-cc9b-453c-9fea-e4aab43640dc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14320,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "87bb2eb1-6ee3-4310-a317-d90ecb337655",
              "title": "Forgot Password",
              "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\login.test.js",
              "file": "\\test\\login.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Account not found",
                  "fullTitle": "Login Page Forgot Password Account not found",
                  "timedOut": false,
                  "duration": 3744,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const forgotPasswordLink = await driver.findElement(By.xpath(\"//*[contains(text(), 'Forget password?')]\"));\nawait forgotPasswordLink.click();\nconst emailInput = await driver.findElement(By.css('input[type=\"text\"]'));\nconst resetPasswordButton = await driver.findElement(By.xpath(\"//*[contains(text(), 'Reset password')]\"));\nawait emailInput.sendKeys('test@example.com');\nawait resetPasswordButton.click();\nawait sleep(3000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nconst myCssSelector = '.go2072408551';\ncheckToastMessage(driver, myCssSelector, 'Account not found');",
                  "err": {},
                  "uuid": "363e6a12-9f82-413e-a69a-bafc837e8cb5",
                  "parentUUID": "87bb2eb1-6ee3-4310-a317-d90ecb337655",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Password reset email sent",
                  "fullTitle": "Login Page Forgot Password Password reset email sent",
                  "timedOut": false,
                  "duration": 3752,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const forgotPasswordLink = await driver.findElement(By.xpath(\"//*[contains(text(), 'Forget password?')]\"));\nawait forgotPasswordLink.click();\nconst emailInput = await driver.findElement(By.css('input[type=\"text\"]'));\nconst resetPasswordButton = await driver.findElement(By.xpath(\"//*[contains(text(), 'Reset password')]\"));\nawait emailInput.sendKeys('20110335@student.hcmute.edu.vn');\nawait resetPasswordButton.click();\nawait sleep(3000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nconst myCssSelector = '.go2072408551';\ncheckToastMessage(driver, myCssSelector, 'Password reset email sent!');",
                  "err": {},
                  "uuid": "5087df3f-dd50-4c20-933d-cc9c50b08a50",
                  "parentUUID": "87bb2eb1-6ee3-4310-a317-d90ecb337655",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Missing email",
                  "fullTitle": "Login Page Forgot Password Missing email",
                  "timedOut": false,
                  "duration": 3407,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const forgotPasswordLink = await driver.findElement(By.xpath(\"//*[contains(text(), 'Forget password?')]\"));\nawait forgotPasswordLink.click();\nconst resetPasswordButton = await driver.findElement(By.xpath(\"//*[contains(text(), 'Reset password')]\"));\nawait resetPasswordButton.click();\nawait sleep(3000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nconst myCssSelector = '.go2072408551';\ncheckToastMessage(driver, myCssSelector, 'Vui l├▓ng nhß║¡p email!');",
                  "err": {},
                  "uuid": "3353a8f0-4c14-411a-9401-ce5738a06a03",
                  "parentUUID": "87bb2eb1-6ee3-4310-a317-d90ecb337655",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "363e6a12-9f82-413e-a69a-bafc837e8cb5",
                "5087df3f-dd50-4c20-933d-cc9c50b08a50",
                "3353a8f0-4c14-411a-9401-ce5738a06a03"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10903,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fcc51c33-2743-4e31-981d-b49437b91034",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\post-edit.test.js",
      "file": "\\test\\post-edit.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "891048ed-fa83-4c80-bcb2-945dfc3ad771",
          "title": "Create Post Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\post-edit.test.js",
          "file": "\\test\\post-edit.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Create Post Page\"",
              "fullTitle": "Create Post Page \"before all\" hook in \"Create Post Page\"",
              "timedOut": false,
              "duration": 938,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "97feee0a-6064-4660-846d-179adbb02ffe",
              "parentUUID": "891048ed-fa83-4c80-bcb2-945dfc3ad771",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Create Post Page\"",
              "fullTitle": "Create Post Page \"after all\" hook in \"Create Post Page\"",
              "timedOut": false,
              "duration": 356,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "c59637ef-2fe6-4ce8-9b04-51cceebf2355",
              "parentUUID": "891048ed-fa83-4c80-bcb2-945dfc3ad771",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should create a new post",
              "fullTitle": "Create Post Page should create a new post",
              "timedOut": false,
              "duration": 19088,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login('lientest', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/edit-post/667e5af0769934a526d56a00');\n// ─Éiß╗ün ti├¬u ─æß╗ü\nconst titleInput = await driver.wait(until.elementLocated(By.css('input[placeholder=\"Nhß║¡p ti├¬u ─æß╗ü...\"]')), 5000);\nawait titleInput.sendKeys('Test - Ti├¬u ─æß╗ü b├ái viß║┐t');\n// Chß╗ìn ß║únh cho b├ái viß║┐t\n// const imageInput = await driver.findElement(By.css('input[type=\"file\"]'));\n// await imageInput.sendKeys(`${process.cwd()}/test/test-newpost.png`);\n// Select tags\nconst selectTagButton = await driver.findElement(By.css('.EditPost_tagInput__kMi7c .EditPost_btn__m0EBk'));\nawait selectTagButton.click();\nawait sleep(1000); // ─Éß╗úi modal mß╗ƒ ra\n// T├¼m v├á chß╗ìn mß╗Öt tag\nconst dropdownButton = await driver.findElement(By.css('button[data-slot=\"trigger\"]'));\nawait dropdownButton.click();\nawait sleep(1000); // ─Éß╗úi dropdown mß╗ƒ ra\n\n// T├¼m v├á click v├áo phß║ºn tß╗¡ trong dropdown dß╗▒a tr├¬n text\nconst dropdownItems = await driver.findElements(By.css('ul[data-slot=\"list\"]'));\nfor (const item of dropdownItems) {\n    if ((await item.getText()).trim() === \"Review s├ích\") {\n      await item.click();\n    }\n  }\nawait dropdownButton.click();\nawait sleep(500); // ─Éß╗úi dropdown ─æ├│ng lß║íi\nconst modalCloseButton = await driver.findElement(By.xpath(\"(//button[normalize-space()='Close'])[1]\"));\nawait modalCloseButton.click();\nawait sleep(500);\n// Enter content in the rich text editor\nawait sleep(3000);\nconst richTextEditor = await driver.findElement(By.xpath(\"//div[@role='textbox']\"));\nawait richTextEditor.clear();\nawait richTextEditor.sendKeys('NNß╗Öi dung b├ái viß║┐t chß╗ënh sß╗¡a');\n// Submit the form\nconst submitButton = await driver.findElement(By.css('.EditPost_submitBtn__t3NP6'));\nawait submitButton.click();\nawait sleep(2000);\nlet message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\nwhile (message === 'Processing...') {\n    await driver.sleep(1500);\n    message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\n}\nawait checkToastMessage(driver, '.go3958317564', 'B├ái viß║┐t ─æ╞░ß╗úc cß║¡p nhß║¡t th├ánh c├┤ng!');",
              "err": {},
              "uuid": "f96e928e-83ad-4ba5-bf3a-1a6f44aa4443",
              "parentUUID": "891048ed-fa83-4c80-bcb2-945dfc3ad771",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f96e928e-83ad-4ba5-bf3a-1a6f44aa4443"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19088,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "38d6a9c0-7443-4d31-a839-3c2a5ef957f0",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\post-new.test.js",
      "file": "\\test\\post-new.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "52b941ca-701f-45cb-966d-ba4fa746c919",
          "title": "Create Post Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\post-new.test.js",
          "file": "\\test\\post-new.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Create Post Page\"",
              "fullTitle": "Create Post Page \"before all\" hook in \"Create Post Page\"",
              "timedOut": false,
              "duration": 2242,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "20874ebf-73e9-483b-a1a3-1ca82dd1a2e6",
              "parentUUID": "52b941ca-701f-45cb-966d-ba4fa746c919",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Create Post Page\"",
              "fullTitle": "Create Post Page \"after all\" hook in \"Create Post Page\"",
              "timedOut": false,
              "duration": 1159,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "db503d4a-1155-4cc8-9108-367b36e6d789",
              "parentUUID": "52b941ca-701f-45cb-966d-ba4fa746c919",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should create a new post",
              "fullTitle": "Create Post Page should create a new post",
              "timedOut": false,
              "duration": 23653,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login('lientest', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/new-post');\n// ─Éiß╗ün ti├¬u ─æß╗ü\nconst titleInput = await driver.findElement(By.css('input[placeholder=\"Nhß║¡p ti├¬u ─æß╗ü...\"]'));\nawait titleInput.sendKeys('Test - Ti├¬u ─æß╗ü b├ái viß║┐t');\n// Chß╗ìn ß║únh cho b├ái viß║┐t\nconst imageInput = await driver.findElement(By.css('input[type=\"file\"]'));\nawait imageInput.sendKeys(`${process.cwd()}/test/test-newpost.png`);\n// Select tags\nconst selectTagButton = await driver.findElement(By.css('.NewPost_tagInput___Epnt .NewPost_btn__D69JG'));\nawait selectTagButton.click();\nawait sleep(1000); // ─Éß╗úi modal mß╗ƒ ra\n// T├¼m v├á chß╗ìn mß╗Öt tag\nconst dropdownButton = await driver.findElement(By.css('button[data-slot=\"trigger\"]'));\nawait dropdownButton.click();\nawait sleep(2000); // ─Éß╗úi dropdown mß╗ƒ ra\n\n// T├¼m v├á click v├áo phß║ºn tß╗¡ trong dropdown dß╗▒a tr├¬n text\nconst dropdownItems = await driver.findElements(By.css('ul[data-slot=\"list\"]'));\nfor (const item of dropdownItems) {\n    if ((await item.getText()).trim() === \"Review s├ích\") {\n      await item.click();\n    }\n  }\nawait dropdownButton.click();\nawait sleep(500); // ─Éß╗úi dropdown ─æ├│ng lß║íi\nconst modalCloseButton = await driver.findElement(By.xpath(\"(//button[normalize-space()='Close'])[1]\"));\nawait modalCloseButton.click();\nawait sleep(1000);\n// await modalCloseButton.click();\n// await sleep(1000); // ─Éß╗úi modal ─æ├│ng lß║íi\n// Enter content in the rich text editor\nconst richTextEditor = await driver.findElement(By.xpath(\"//div[@role='textbox']\"));\nawait richTextEditor.sendKeys('Nß╗Öi dung b├ái viß║┐t');\n// Submit the form\nconst submitButton = await driver.findElement(By.css('.NewPost_submitBtn__67fBx'));\nawait submitButton.click();\nlet message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\nwhile (message === 'Processing...') {\n    await driver.sleep(1500);\n    message = await driver.wait(until.elementLocated(By.css('.go3958317564')), 10000).getText();\n}\nawait checkToastMessage(driver, '.go3958317564', 'B├ái viß║┐t ─æ╞░ß╗úc tß║ío th├ánh c├┤ng!');\n// // Kiß╗âm tra ─æiß╗üu h╞░ß╗¢ng vß╗ü trang cß╗Öng ─æß╗ông v├á b├ái viß║┐t mß╗¢i c├│ hiß╗ân thß╗ï\n// await driver.wait(until.urlContains('/community'), 30000);\n// const newPostTitle = await driver.findElement(By.contains('Test - Ti├¬u ─æß╗ü b├ái viß║┐t'));\n// assert(await newPostTitle.isDisplayed(), 'B├ái viß║┐t mß╗¢i kh├┤ng hiß╗ân thß╗ï trong trang cß╗Öng ─æß╗ông');",
              "err": {},
              "uuid": "a32e20c9-c740-466c-b7ec-0905911056ee",
              "parentUUID": "52b941ca-701f-45cb-966d-ba4fa746c919",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a32e20c9-c740-466c-b7ec-0905911056ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7d839013-f87c-4db7-9823-e54972fbf381",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\post.test.js",
      "file": "\\test\\post.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a41c3436-14d3-4b85-a78e-74fb01a19a7a",
          "title": "Post Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\post.test.js",
          "file": "\\test\\post.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Post Page\"",
              "fullTitle": "Post Page \"before all\" hook in \"Post Page\"",
              "timedOut": false,
              "duration": 10398,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\nawait login('lientest', 'bichLien#20110335');\nawait driver.get('http://localhost:3000/post/6635d170a4fa5e59777a3e86');",
              "err": {},
              "uuid": "f05c2b50-2ba4-44f0-916e-71aee8590297",
              "parentUUID": "a41c3436-14d3-4b85-a78e-74fb01a19a7a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Post Page\"",
              "fullTitle": "Post Page \"after all\" hook in \"Post Page\"",
              "timedOut": false,
              "duration": 212,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "9b8e56f8-d38b-4702-a59b-ffd563a7e881",
              "parentUUID": "a41c3436-14d3-4b85-a78e-74fb01a19a7a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "89cde032-3dfe-4efc-a87f-045efaba52c4",
              "title": "POST FUNCTIONALITIES",
              "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\post.test.js",
              "file": "\\test\\post.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display post page elements",
                  "fullTitle": "Post Page POST FUNCTIONALITIES should display post page elements",
                  "timedOut": false,
                  "duration": 1090,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { likeButton, shareButton, commentTextarea, sendCommentButton } = await getPostElements(driver);\nassert(await likeButton.isDisplayed());\nassert(await shareButton.isDisplayed());\nassert(await commentTextarea.isDisplayed());\nassert(await sendCommentButton.isDisplayed());",
                  "err": {},
                  "uuid": "2fb5dadf-fb59-4553-9440-cd42e03e65c4",
                  "parentUUID": "89cde032-3dfe-4efc-a87f-045efaba52c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should like post successfully when clicking 'Heart' button",
                  "fullTitle": "Post Page POST FUNCTIONALITIES should like post successfully when clicking 'Heart' button",
                  "timedOut": false,
                  "duration": 1637,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { likeButton } = await getPostElements(driver);\nawait likeButton.click();\nawait sleep(1000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', ['Hearted!', 'Unhearted!']);",
                  "err": {},
                  "uuid": "19afe27d-faa4-4ddd-9a78-6bed0bbfc427",
                  "parentUUID": "89cde032-3dfe-4efc-a87f-045efaba52c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should share post successfully when clicking 'Share' button",
                  "fullTitle": "Post Page POST FUNCTIONALITIES should share post successfully when clicking 'Share' button",
                  "timedOut": false,
                  "duration": 1976,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { shareButton } = await getPostElements(driver);\nawait shareButton.click();\nawait sleep(1000);",
                  "err": {},
                  "uuid": "5ed58052-4da3-455e-9fff-fc65a725af42",
                  "parentUUID": "89cde032-3dfe-4efc-a87f-045efaba52c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should send comment successfully with correct details",
                  "fullTitle": "Post Page POST FUNCTIONALITIES should send comment successfully with correct details",
                  "timedOut": false,
                  "duration": 3388,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { commentTextarea, sendCommentButton } = await getPostElements(driver);\nawait commentTextarea.sendKeys('Great post!');\nawait sendCommentButton.click();\nawait sleep(1000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'B├¼nh luß║¡n ─æ├ú ─æ╞░ß╗úc gß╗¡i cho ban kiß╗âm duyß╗çt!');",
                  "err": {},
                  "uuid": "f3da8999-7513-4859-bd70-edcdd0e8b2ad",
                  "parentUUID": "89cde032-3dfe-4efc-a87f-045efaba52c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2fb5dadf-fb59-4553-9440-cd42e03e65c4",
                "19afe27d-faa4-4ddd-9a78-6bed0bbfc427",
                "5ed58052-4da3-455e-9fff-fc65a725af42",
                "f3da8999-7513-4859-bd70-edcdd0e8b2ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8091,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6d8d10f6-5ff0-4dfd-96f9-70d38fd42cbb",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\signup.test.js",
      "file": "\\test\\signup.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8b204f26-0549-4be2-b701-3bc0fea51ca6",
          "title": "Sign Up Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\signup.test.js",
          "file": "\\test\\signup.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Sign Up Page\"",
              "fullTitle": "Sign Up Page \"before all\" hook in \"Sign Up Page\"",
              "timedOut": false,
              "duration": 950,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "34b156cf-e85d-479b-9cd5-205a781aecdf",
              "parentUUID": "8b204f26-0549-4be2-b701-3bc0fea51ca6",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Sign Up Page\"",
              "fullTitle": "Sign Up Page \"before each\" hook in \"Sign Up Page\"",
              "timedOut": false,
              "duration": 565,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/signup');",
              "err": {},
              "uuid": "9db1f1ae-901c-4014-9d89-1046df899180",
              "parentUUID": "8b204f26-0549-4be2-b701-3bc0fea51ca6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Sign Up Page\"",
              "fullTitle": "Sign Up Page \"after all\" hook in \"Sign Up Page\"",
              "timedOut": false,
              "duration": 127,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "81df7cd4-1bca-404b-878e-fee49718dad2",
              "parentUUID": "8b204f26-0549-4be2-b701-3bc0fea51ca6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
              "title": "Sign Up",
              "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\signup.test.js",
              "file": "\\test\\signup.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display sign up form",
                  "fullTitle": "Sign Up Page Sign Up should display sign up form",
                  "timedOut": false,
                  "duration": 135,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nassert(await emailInput.isDisplayed());\nassert(await usernameInput.isDisplayed());\nassert(await displayNameInput.isDisplayed());\nassert(await passwordInput.isDisplayed());\nassert(await retypePasswordInput.isDisplayed());\nassert(await signUpButton.isDisplayed());",
                  "err": {},
                  "uuid": "fe59b54d-f456-4c99-8ad8-bad8dfe23086",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should sign up successfully with correct details",
                  "fullTitle": "Sign Up Page Sign Up should sign up successfully with correct details",
                  "timedOut": false,
                  "duration": 4663,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('test@example.com');\nawait usernameInput.sendKeys('testuser');\nawait displayNameInput.sendKeys('Test User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('StrongPass123!');\nawait signUpButton.click();\nawait sleep(3000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\n// await checkToastMessage(driver, '.go3958317564', '─É─âng k├¡ t├ái khoß║ún th├ánh c├┤ng!');\nawait driver.wait(until.urlContains('/login'), 10000);\nconst currentUrl = await driver.getCurrentUrl();\nassert(currentUrl.includes('/login'), 'Kh├┤ng chuyß╗ân h╞░ß╗¢ng ─æß║┐n trang ─æß╗ìc s├ích.');",
                  "err": {},
                  "uuid": "dd4bcd93-f4ee-4f3a-8b71-4202c38eeba8",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for missing information",
                  "fullTitle": "Sign Up Page Sign Up should display error for missing information",
                  "timedOut": false,
                  "duration": 140,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { signUpButton } = await getSignUpElements(driver);\nawait signUpButton.click();\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Vui l├▓ng nhß║¡p ─æß╗º th├┤ng tin!');",
                  "err": {},
                  "uuid": "622aea28-8836-4d07-9f2d-0a1ea77443c7",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for invalid email",
                  "fullTitle": "Sign Up Page Sign Up should display error for invalid email",
                  "timedOut": false,
                  "duration": 535,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('invalidemail');\nawait usernameInput.sendKeys('testuser');\nawait displayNameInput.sendKeys('Test User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('StrongPass123!');\nawait signUpButton.click();\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Vui l├▓ng nhß║¡p mß╗Öt ─æß╗ïa chß╗ë email hß╗úp lß╗ç!');",
                  "err": {},
                  "uuid": "51401d31-e1c9-4155-b88b-e1ba6e8a556c",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for invalid username",
                  "fullTitle": "Sign Up Page Sign Up should display error for invalid username",
                  "timedOut": false,
                  "duration": 563,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('test@example.com');\nawait usernameInput.sendKeys('test user'); // Invalid username with space\nawait displayNameInput.sendKeys('Test User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('StrongPass123!');\nawait signUpButton.click();\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Username chß╗ë ─æ╞░ß╗úc bao gß╗ôm chß╗» c├íi kh├┤ng dß║Ñu v├á sß╗æ');",
                  "err": {},
                  "uuid": "5eaa8caf-3de0-4b09-8bf0-a82c073655bb",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for weak password",
                  "fullTitle": "Sign Up Page Sign Up should display error for weak password",
                  "timedOut": false,
                  "duration": 519,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('test@example.com');\nawait usernameInput.sendKeys('testuser');\nawait displayNameInput.sendKeys('Test User');\nawait passwordInput.sendKeys('weakpass');\nawait retypePasswordInput.sendKeys('weakpass');\nawait signUpButton.click();\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Mß║¡t khß║⌐u phß║úi chß╗⌐a ├¡t nhß║Ñt 8 k├╜ tß╗▒, bao gß╗ôm ├¡t nhß║Ñt mß╗Öt chß╗» hoa, mß╗Öt chß╗» th╞░ß╗¥ng, mß╗Öt sß╗æ v├á mß╗Öt k├╜ tß╗▒ ─æß║╖c biß╗çt!');",
                  "err": {},
                  "uuid": "27927cdd-c368-4190-b640-77fff9e8f8c4",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for non-matching passwords",
                  "fullTitle": "Sign Up Page Sign Up should display error for non-matching passwords",
                  "timedOut": false,
                  "duration": 937,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('test@example.com');\nawait usernameInput.sendKeys('testuser');\nawait displayNameInput.sendKeys('Test User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('DifferentPass123!');\nawait signUpButton.click();\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Mß║¡t khß║⌐u kh├┤ng khß╗¢p!');",
                  "err": {},
                  "uuid": "53d6273b-8cee-441a-a18f-ba25acb012ee",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for existin gmail",
                  "fullTitle": "Sign Up Page Sign Up should display error for existin gmail",
                  "timedOut": false,
                  "duration": 3855,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('20110335@student.hcmute.edu.vn'); // Email ─æ├ú tß╗ôn tß║íi\nawait usernameInput.sendKeys('existinguser'); // Username ─æ├ú tß╗ôn tß║íi\nawait displayNameInput.sendKeys('Existing User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('StrongPass123!');\nawait signUpButton.click();\nawait sleep(3000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Username or email has already existed!');",
                  "err": {},
                  "uuid": "b717ac51-eb6b-43b3-ad9f-ccfb72fe3493",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for existin username",
                  "fullTitle": "Sign Up Page Sign Up should display error for existin username",
                  "timedOut": false,
                  "duration": 3575,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('test@example.com');\nawait usernameInput.sendKeys('nguyenlien'); // Username ─æ├ú tß╗ôn tß║íi\nawait displayNameInput.sendKeys('Existing User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('StrongPass123!');\nawait signUpButton.click();\nawait sleep(3000);\n// Kiß╗âm tra nß╗Öi dung v├á sß╗▒ hiß╗ân thß╗ï cß╗ºa toast message\nawait checkToastMessage(driver, '.go3958317564', 'Username or email has already existed!');",
                  "err": {},
                  "uuid": "89c48c64-f9b8-4adb-bab4-90dd6e6002d2",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fe59b54d-f456-4c99-8ad8-bad8dfe23086",
                "dd4bcd93-f4ee-4f3a-8b71-4202c38eeba8",
                "622aea28-8836-4d07-9f2d-0a1ea77443c7",
                "51401d31-e1c9-4155-b88b-e1ba6e8a556c",
                "5eaa8caf-3de0-4b09-8bf0-a82c073655bb",
                "27927cdd-c368-4190-b640-77fff9e8f8c4",
                "53d6273b-8cee-441a-a18f-ba25acb012ee",
                "b717ac51-eb6b-43b3-ad9f-ccfb72fe3493",
                "89c48c64-f9b8-4adb-bab4-90dd6e6002d2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14922,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "account",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mocha-reports",
        "reportFilename": "account"
      },
      "version": "6.2.0"
    }
  }
}
