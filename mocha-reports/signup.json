{
  "stats": {
    "suites": 2,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-11T13:48:58.946Z",
    "end": "2024-07-11T13:49:21.376Z",
    "duration": 22430,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6d8d10f6-5ff0-4dfd-96f9-70d38fd42cbb",
      "title": "",
      "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\signup.test.js",
      "file": "\\test\\signup.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8b204f26-0549-4be2-b701-3bc0fea51ca6",
          "title": "Sign Up Page",
          "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\signup.test.js",
          "file": "\\test\\signup.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Sign Up Page\"",
              "fullTitle": "Sign Up Page \"before all\" hook in \"Sign Up Page\"",
              "timedOut": false,
              "duration": 950,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "34b156cf-e85d-479b-9cd5-205a781aecdf",
              "parentUUID": "8b204f26-0549-4be2-b701-3bc0fea51ca6",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Sign Up Page\"",
              "fullTitle": "Sign Up Page \"before each\" hook in \"Sign Up Page\"",
              "timedOut": false,
              "duration": 565,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:3000/signup');",
              "err": {},
              "uuid": "9db1f1ae-901c-4014-9d89-1046df899180",
              "parentUUID": "8b204f26-0549-4be2-b701-3bc0fea51ca6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Sign Up Page\"",
              "fullTitle": "Sign Up Page \"after all\" hook in \"Sign Up Page\"",
              "timedOut": false,
              "duration": 127,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "81df7cd4-1bca-404b-878e-fee49718dad2",
              "parentUUID": "8b204f26-0549-4be2-b701-3bc0fea51ca6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
              "title": "Sign Up",
              "fullFile": "D:\\GitHub\\mori-app-frontend\\test\\signup.test.js",
              "file": "\\test\\signup.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display sign up form",
                  "fullTitle": "Sign Up Page Sign Up should display sign up form",
                  "timedOut": false,
                  "duration": 135,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nassert(await emailInput.isDisplayed());\nassert(await usernameInput.isDisplayed());\nassert(await displayNameInput.isDisplayed());\nassert(await passwordInput.isDisplayed());\nassert(await retypePasswordInput.isDisplayed());\nassert(await signUpButton.isDisplayed());",
                  "err": {},
                  "uuid": "fe59b54d-f456-4c99-8ad8-bad8dfe23086",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should sign up successfully with correct details",
                  "fullTitle": "Sign Up Page Sign Up should sign up successfully with correct details",
                  "timedOut": false,
                  "duration": 4663,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('test@example.com');\nawait usernameInput.sendKeys('testuser');\nawait displayNameInput.sendKeys('Test User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('StrongPass123!');\nawait signUpButton.click();\nawait sleep(3000);\n// Kiểm tra nội dung và sự hiển thị của toast message\n// await checkToastMessage(driver, '.go3958317564', 'Đăng kí tài khoản thành công!');\nawait driver.wait(until.urlContains('/login'), 10000);\nconst currentUrl = await driver.getCurrentUrl();\nassert(currentUrl.includes('/login'), 'Không chuyển hướng đến trang đọc sách.');",
                  "err": {},
                  "uuid": "dd4bcd93-f4ee-4f3a-8b71-4202c38eeba8",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for missing information",
                  "fullTitle": "Sign Up Page Sign Up should display error for missing information",
                  "timedOut": false,
                  "duration": 140,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { signUpButton } = await getSignUpElements(driver);\nawait signUpButton.click();\n// Kiểm tra nội dung và sự hiển thị của toast message\nawait checkToastMessage(driver, '.go3958317564', 'Vui lòng nhập đủ thông tin!');",
                  "err": {},
                  "uuid": "622aea28-8836-4d07-9f2d-0a1ea77443c7",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for invalid email",
                  "fullTitle": "Sign Up Page Sign Up should display error for invalid email",
                  "timedOut": false,
                  "duration": 535,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('invalidemail');\nawait usernameInput.sendKeys('testuser');\nawait displayNameInput.sendKeys('Test User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('StrongPass123!');\nawait signUpButton.click();\n// Kiểm tra nội dung và sự hiển thị của toast message\nawait checkToastMessage(driver, '.go3958317564', 'Vui lòng nhập một địa chỉ email hợp lệ!');",
                  "err": {},
                  "uuid": "51401d31-e1c9-4155-b88b-e1ba6e8a556c",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for invalid username",
                  "fullTitle": "Sign Up Page Sign Up should display error for invalid username",
                  "timedOut": false,
                  "duration": 563,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('test@example.com');\nawait usernameInput.sendKeys('test user'); // Invalid username with space\nawait displayNameInput.sendKeys('Test User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('StrongPass123!');\nawait signUpButton.click();\n// Kiểm tra nội dung và sự hiển thị của toast message\nawait checkToastMessage(driver, '.go3958317564', 'Username chỉ được bao gồm chữ cái không dấu và số');",
                  "err": {},
                  "uuid": "5eaa8caf-3de0-4b09-8bf0-a82c073655bb",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for weak password",
                  "fullTitle": "Sign Up Page Sign Up should display error for weak password",
                  "timedOut": false,
                  "duration": 519,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('test@example.com');\nawait usernameInput.sendKeys('testuser');\nawait displayNameInput.sendKeys('Test User');\nawait passwordInput.sendKeys('weakpass');\nawait retypePasswordInput.sendKeys('weakpass');\nawait signUpButton.click();\n// Kiểm tra nội dung và sự hiển thị của toast message\nawait checkToastMessage(driver, '.go3958317564', 'Mật khẩu phải chứa ít nhất 8 ký tự, bao gồm ít nhất một chữ hoa, một chữ thường, một số và một ký tự đặc biệt!');",
                  "err": {},
                  "uuid": "27927cdd-c368-4190-b640-77fff9e8f8c4",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for non-matching passwords",
                  "fullTitle": "Sign Up Page Sign Up should display error for non-matching passwords",
                  "timedOut": false,
                  "duration": 937,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('test@example.com');\nawait usernameInput.sendKeys('testuser');\nawait displayNameInput.sendKeys('Test User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('DifferentPass123!');\nawait signUpButton.click();\n// Kiểm tra nội dung và sự hiển thị của toast message\nawait checkToastMessage(driver, '.go3958317564', 'Mật khẩu không khớp!');",
                  "err": {},
                  "uuid": "53d6273b-8cee-441a-a18f-ba25acb012ee",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for existin gmail",
                  "fullTitle": "Sign Up Page Sign Up should display error for existin gmail",
                  "timedOut": false,
                  "duration": 3855,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('20110335@student.hcmute.edu.vn'); // Email đã tồn tại\nawait usernameInput.sendKeys('existinguser'); // Username đã tồn tại\nawait displayNameInput.sendKeys('Existing User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('StrongPass123!');\nawait signUpButton.click();\nawait sleep(3000);\n// Kiểm tra nội dung và sự hiển thị của toast message\nawait checkToastMessage(driver, '.go3958317564', 'Username or email has already existed!');",
                  "err": {},
                  "uuid": "b717ac51-eb6b-43b3-ad9f-ccfb72fe3493",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display error for existin username",
                  "fullTitle": "Sign Up Page Sign Up should display error for existin username",
                  "timedOut": false,
                  "duration": 3575,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { emailInput, usernameInput, displayNameInput, passwordInput, retypePasswordInput, signUpButton } = await getSignUpElements(driver);\nawait emailInput.sendKeys('test@example.com');\nawait usernameInput.sendKeys('nguyenlien'); // Username đã tồn tại\nawait displayNameInput.sendKeys('Existing User');\nawait passwordInput.sendKeys('StrongPass123!');\nawait retypePasswordInput.sendKeys('StrongPass123!');\nawait signUpButton.click();\nawait sleep(3000);\n// Kiểm tra nội dung và sự hiển thị của toast message\nawait checkToastMessage(driver, '.go3958317564', 'Username or email has already existed!');",
                  "err": {},
                  "uuid": "89c48c64-f9b8-4adb-bab4-90dd6e6002d2",
                  "parentUUID": "3561d36b-2b0d-4162-b4d0-8a6994a8bde6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fe59b54d-f456-4c99-8ad8-bad8dfe23086",
                "dd4bcd93-f4ee-4f3a-8b71-4202c38eeba8",
                "622aea28-8836-4d07-9f2d-0a1ea77443c7",
                "51401d31-e1c9-4155-b88b-e1ba6e8a556c",
                "5eaa8caf-3de0-4b09-8bf0-a82c073655bb",
                "27927cdd-c368-4190-b640-77fff9e8f8c4",
                "53d6273b-8cee-441a-a18f-ba25acb012ee",
                "b717ac51-eb6b-43b3-ad9f-ccfb72fe3493",
                "89c48c64-f9b8-4adb-bab4-90dd6e6002d2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14922,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "signup",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mocha-reports",
        "reportFilename": "signup"
      },
      "version": "6.2.0"
    }
  }
}